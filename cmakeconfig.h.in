/* config.h.  Generated from cmakeconfig.h.in by cmake.  */

#ifndef __U8ID_CONF_H__
#define __U8ID_CONF_H__

#define HAVE_CONFIG_H 1
/* Defined to 1 on a cmake build */
#define CMAKE_BUILD 1

/* Define to force a single normalization. */
#cmakedefine LIBU8IDENT_NORM
#ifdef LIBU8IDENT_NORM
#  define U8ID_NORM=@LIBU8IDENT_NORM@
#else
#  undef U8ID_NORM
#endif   

/* Define to force a single profile. */
#cmakedefine LIBU8IDENT_PROFILE
#ifdef LIBU8IDENT_PROFILE
#  define U8ID_PROFILE=@LIBU8IDENT_PROFILE@
#else
#  undef U8ID_PROFILE
#endif   

/* Define to force a single check_xid option. */
#cmakedefine ENABLE_CHECK_XID
#cmakedefine DISABLE_CHECK_XID

/* Define to enable confus.h. */
#cmakedefine HAVE_CONFUS

/* Define if a shared library will be built */
#define ENABLE_SHARED @BUILD_SHARED_LIBS@

/* TODO Defined to 1 when the compiler supports c11 */
#define HAVE_C11 1

/* Define if you have the <dlfcn.h> header file. */
#cmakedefine HAVE_DLFCN_H

/* Define if you have the <dirent.h> header file. */
#cmakedefine HAVE_DIRENT_H

/* Define if you have the <getopt.h> header file. */
#cmakedefine HAVE_GETOPT_H

/* Define if you have the `getopt_long' function. */
#cmakedefine HAVE_GETOPT_LONG

/* Define if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H

/* Define if you have the <libgen.h> header file. */
#cmakedefine HAVE_LIBGEN_H

/* Define if you have the <malloc.h> header file. */
#cmakedefine HAVE_MALLOC_H

/* Define if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H

/* Define if you have the `memset' function. */
#cmakedefine HAVE_MEMSET

/* Define if stdbool.h conforms to C99. */
#cmakedefine HAVE_STDBOOL_H

/* Define if you have the <stddef.h> header file. */
#cmakedefine HAVE_STDDEF_H

/* Define if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H

/* Define if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H

/* Define if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H

/* Define if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H

/* Define if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H

/* Define if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H

/* Define if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H

/* TODO Define if the system has the type `_Bool'. */
#define HAVE__BOOL 1

/* Define if the system has the `__builtin_ffs' built-in function */
#cmakedefine HAVE___BUILTIN_FFS

/* The size of `size_t', as computed by sizeof. */
#define SIZEOF_SIZE_T ${SIZE_T}

/* Define to the full name of this package. */
#define PACKAGE_NAME "libu8ident"

/* Define to the full name and version of this package. */
#define PACKAGE_STRING "libu8ident ${PACKAGE_VERSION}"

/* Define to the one symbol short name of this package. */
#define PACKAGE_TARNAME "libu8ident"

/* Define to the home page for this package. */
#define PACKAGE_URL "http://github.com/rurban/libu8ident/"

/* Define to the version of this package. */
#define PACKAGE_VERSION "${PACKAGE_VERSION}"

/* Define for Solaris 2.5.1 so the uint32_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
/* #undef _UINT32_T */

/* Define for Solaris 2.5.1 so the uint64_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
/* #undef _UINT64_T */

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
/* #undef inline */
#endif

/* Define to the type of a signed integer type of width exactly 16 bits if
   such a type exists and the standard includes do not define it. */
/* #undef int16_t */

/* Define to the type of a signed integer type of width exactly 32 bits if
   such a type exists and the standard includes do not define it. */
/* #undef int32_t */

/* Define to the type of a signed integer type of width exactly 64 bits if
   such a type exists and the standard includes do not define it. */
/* #undef int64_t */

/* Define to rpl_malloc if the replacement function should be used. */
/* #undef malloc */

/* Define to rpl_realloc if the replacement function should be used. */
/* #undef realloc */

/* If restrict is broken with this compiler */
#ifdef __cplusplus
  #define restrict
#endif

/* Define to `unsigned int' if <sys/types.h> does not define. */
/* #undef size_t */

/* Define to the type of an unsigned integer type of width exactly 16 bits if
   such a type exists and the standard includes do not define it. */
/* #undef uint16_t */

/* Define to the type of an unsigned integer type of width exactly 32 bits if
   such a type exists and the standard includes do not define it. */
/* #undef uint32_t */

/* Define to the type of an unsigned integer type of width exactly 64 bits if
   such a type exists and the standard includes do not define it. */
/* #undef uint64_t */

#endif /* __U8ID_CONF_H__ */
