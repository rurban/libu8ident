/* ex: set ro ft=c: -*- mode: c; buffer-read-only: t -*- */
/* libu8ident - Check unicode security guidelines for identifiers.
   Copyright 2014, 2021 Reini Urban
   SPDX-License-Identifier: Apache-2.0 OR GPL-2.0-or-later

   Generated by mkscripts.pl, do not modify.
   UNICODE version 16.0
   This variant seperates 16bit from 32bit ranges, fetching
   more general data into cache lines, with one more branch upfront.
   Currently only used for PERF_TEST.
*/

#define U8ID_UNICODE_MAJOR 16
#define U8ID_UNICODE_MINOR 0

struct sc16 {
  uint16_t from;
  uint16_t to;
  enum u8id_sc scr;
};

struct scx16 {
  uint16_t from;
  uint16_t to;
  uint8_t gc;
  const char *list; // indices
};

struct range_bool16 {
  uint16_t from;
  uint16_t to;
};

#if !defined DISABLE_CHECK_XID && !defined ENABLE_CHECK_XID
#  ifndef EXTERN_SCRIPTS
LOCAL const struct sc16 xid_script_list16[] = {
    // clang-format off
    {0x0000, 0x0040, 0},	// Common
    {0x0041, 0x005A, 2},	// Latin
    {0x005B, 0x0060, 0},	// Common (Not_XID)
    {0x0061, 0x007A, 2},	// Latin
    {0x007B, 0x00A9, 0},	// Common (Not_XID)
    {0x00AA, 0x00AA, 2},	// Latin (Not_NFKC)
    {0x00AB, 0x00B9, 0},	// Common (Not_XID)
    {0x00BA, 0x00BA, 2},	// Latin (Not_NFKC)
    {0x00BB, 0x00BF, 0},	// Common (Not_XID)
    {0x00C0, 0x00D6, 2},	// Latin
    {0x00D7, 0x00D7, 0},	// Common (Not_XID)
    {0x00D8, 0x00F6, 2},	// Latin
    {0x00F7, 0x00F7, 0},	// Common (Not_XID)
    {0x00F8, 0x02B8, 2},	// Latin
    {0x02B9, 0x02DF, 0},	// Common
    {0x02E0, 0x02E4, 2},	// Latin (Not_NFKC)
    {0x02E5, 0x02E9, 0},	// Common (Not_XID)
    {0x02EA, 0x02EB, 6},	// Bopomofo (Not_XID)
    {0x02EC, 0x02FF, 0},	// Common
    {0x0300, 0x036F, 1},	// Inherited
    {0x0370, 0x0373, 11},	// Greek (Obsolete)
    {0x0374, 0x0374, 0},	// Common (Not_NFKC)
    {0x0375, 0x0377, 11},	// Greek
    {0x037A, 0x037D, 11},	// Greek (Not_NFKC)
    {0x037E, 0x037E, 0},	// Common (Not_NFKC)
    {0x037F, 0x037F, 11},	// Greek (Obsolete)
    {0x0384, 0x0384, 11},	// Greek (Not_NFKC)
    {0x0385, 0x0385, 0},	// Common (Not_NFKC)
    {0x0386, 0x0386, 11},	// Greek
    {0x0387, 0x0387, 0},	// Common (Not_NFKC)
    {0x0388, 0x038A, 11},	// Greek
    {0x038C, 0x038C, 11},	// Greek
    {0x038E, 0x03A1, 11},	// Greek
    {0x03A3, 0x03E1, 11},	// Greek
    {0x03E2, 0x03EF, 43},	// Coptic (Exclusion)
    {0x03F0, 0x03FF, 11},	// Greek (Not_NFKC)
    {0x0400, 0x0484, 7},	// Cyrillic
    {0x0485, 0x0486, 1},	// Inherited (Technical Obsolete)
    {0x0487, 0x052F, 7},	// Cyrillic (Technical Obsolete)
    {0x0531, 0x0556, 4},	// Armenian
    {0x0559, 0x058A, 4},	// Armenian
    {0x058D, 0x058F, 4},	// Armenian (Not_XID)
    {0x0591, 0x05C7, 16},	// Hebrew (Uncommon_Use)
    {0x05D0, 0x05EA, 16},	// Hebrew
    {0x05EF, 0x05F4, 16},	// Hebrew
    {0x0600, 0x0604, 3},	// Arabic (Not_XID)
    {0x0605, 0x0605, 0},	// Common (Not_XID)
    {0x0606, 0x060B, 3},	// Arabic (Not_XID)
    {0x060C, 0x060C, 0},	// Common (Not_XID)
    {0x060D, 0x061A, 3},	// Arabic (Not_XID)
    {0x061B, 0x061B, 0},	// Common (Not_XID)
    {0x061C, 0x061E, 3},	// Arabic (Default_Ignorable)
    {0x061F, 0x061F, 0},	// Common (Not_XID)
    {0x0620, 0x063F, 3},	// Arabic
    {0x0640, 0x0640, 0},	// Common (Obsolete)
    {0x0641, 0x064A, 3},	// Arabic
    {0x064B, 0x0655, 1},	// Inherited
    {0x0656, 0x066F, 3},	// Arabic (Uncommon_Use)
    {0x0670, 0x0670, 1},	// Inherited
    {0x0671, 0x06DC, 3},	// Arabic
    {0x06DD, 0x06DD, 0},	// Common (Not_XID)
    {0x06DE, 0x06FF, 3},	// Arabic (Not_XID)
    {0x0700, 0x070D, 162},	// Syriac (Limited_Use Not_XID)
    {0x070F, 0x074A, 162},	// Syriac (Limited_Use Not_XID)
    {0x074D, 0x074F, 162},	// Syriac (Limited_Use)
    {0x0750, 0x077F, 3},	// Arabic
    {0x0780, 0x07B1, 28},	// Thaana
    {0x07C0, 0x07FA, 155},	// Nko (Limited_Use)
    {0x07FD, 0x07FF, 155},	// Nko (Limited_Use)
    {0x0800, 0x082D, 113},	// Samaritan (Exclusion)
    {0x0830, 0x083E, 113},	// Samaritan (Exclusion Not_XID)
    {0x0840, 0x085B, 150},	// Mandaic (Limited_Use)
    {0x085E, 0x085E, 150},	// Mandaic (Limited_Use Not_XID)
    {0x0860, 0x086A, 162},	// Syriac (Limited_Use)
    {0x0870, 0x088E, 3},	// Arabic
    {0x0890, 0x0891, 3},	// Arabic (Not_XID)
    {0x0897, 0x08E1, 3},	// Arabic (Uncommon_Use)
    {0x08E2, 0x08E2, 0},	// Common (Not_XID)
    {0x08E3, 0x08FF, 3},	// Arabic (Uncommon_Use)
    {0x0900, 0x0950, 8},	// Devanagari (Uncommon_Use)
    {0x0951, 0x0954, 1},	// Inherited (Obsolete)
    {0x0955, 0x0963, 8},	// Devanagari (Uncommon_Use)
    {0x0964, 0x0965, 0},	// Common (Not_XID)
    {0x0966, 0x097F, 8},	// Devanagari
    {0x0980, 0x0983, 5},	// Bengali (Obsolete)
    {0x0985, 0x098C, 5},	// Bengali
    {0x098F, 0x0990, 5},	// Bengali
    {0x0993, 0x09A8, 5},	// Bengali
    {0x09AA, 0x09B0, 5},	// Bengali
    {0x09B2, 0x09B2, 5},	// Bengali
    {0x09B6, 0x09B9, 5},	// Bengali
    {0x09BC, 0x09C4, 5},	// Bengali
    {0x09C7, 0x09C8, 5},	// Bengali
    {0x09CB, 0x09CE, 5},	// Bengali
    {0x09D7, 0x09D7, 5},	// Bengali
    {0x09DC, 0x09DD, 5},	// Bengali (Not_NFKC)
    {0x09DF, 0x09E3, 5},	// Bengali (Not_NFKC)
    {0x09E6, 0x09FE, 5},	// Bengali
    {0x0A01, 0x0A03, 13},	// Gurmukhi
    {0x0A05, 0x0A0A, 13},	// Gurmukhi
    {0x0A0F, 0x0A10, 13},	// Gurmukhi
    {0x0A13, 0x0A28, 13},	// Gurmukhi
    {0x0A2A, 0x0A30, 13},	// Gurmukhi
    {0x0A32, 0x0A33, 13},	// Gurmukhi
    {0x0A35, 0x0A36, 13},	// Gurmukhi
    {0x0A38, 0x0A39, 13},	// Gurmukhi
    {0x0A3C, 0x0A3C, 13},	// Gurmukhi
    {0x0A3E, 0x0A42, 13},	// Gurmukhi
    {0x0A47, 0x0A48, 13},	// Gurmukhi
    {0x0A4B, 0x0A4D, 13},	// Gurmukhi
    {0x0A51, 0x0A51, 13},	// Gurmukhi (Uncommon_Use)
    {0x0A59, 0x0A5C, 13},	// Gurmukhi (Not_NFKC)
    {0x0A5E, 0x0A5E, 13},	// Gurmukhi (Not_NFKC)
    {0x0A66, 0x0A76, 13},	// Gurmukhi
    {0x0A81, 0x0A83, 12},	// Gujarati
    {0x0A85, 0x0A8D, 12},	// Gujarati
    {0x0A8F, 0x0A91, 12},	// Gujarati
    {0x0A93, 0x0AA8, 12},	// Gujarati
    {0x0AAA, 0x0AB0, 12},	// Gujarati
    {0x0AB2, 0x0AB3, 12},	// Gujarati
    {0x0AB5, 0x0AB9, 12},	// Gujarati
    {0x0ABC, 0x0AC5, 12},	// Gujarati
    {0x0AC7, 0x0AC9, 12},	// Gujarati
    {0x0ACB, 0x0ACD, 12},	// Gujarati
    {0x0AD0, 0x0AD0, 12},	// Gujarati
    {0x0AE0, 0x0AE3, 12},	// Gujarati
    {0x0AE6, 0x0AF1, 12},	// Gujarati
    {0x0AF9, 0x0AFF, 12},	// Gujarati (Uncommon_Use)
    {0x0B01, 0x0B03, 24},	// Oriya
    {0x0B05, 0x0B0C, 24},	// Oriya
    {0x0B0F, 0x0B10, 24},	// Oriya
    {0x0B13, 0x0B28, 24},	// Oriya
    {0x0B2A, 0x0B30, 24},	// Oriya
    {0x0B32, 0x0B33, 24},	// Oriya
    {0x0B35, 0x0B39, 24},	// Oriya
    {0x0B3C, 0x0B44, 24},	// Oriya
    {0x0B47, 0x0B48, 24},	// Oriya
    {0x0B4B, 0x0B4D, 24},	// Oriya
    {0x0B55, 0x0B57, 24},	// Oriya
    {0x0B5C, 0x0B5D, 24},	// Oriya (Not_NFKC)
    {0x0B5F, 0x0B63, 24},	// Oriya
    {0x0B66, 0x0B77, 24},	// Oriya
    {0x0B82, 0x0B83, 26},	// Tamil
    {0x0B85, 0x0B8A, 26},	// Tamil
    {0x0B8E, 0x0B90, 26},	// Tamil
    {0x0B92, 0x0B95, 26},	// Tamil
    {0x0B99, 0x0B9A, 26},	// Tamil
    {0x0B9C, 0x0B9C, 26},	// Tamil
    {0x0B9E, 0x0B9F, 26},	// Tamil
    {0x0BA3, 0x0BA4, 26},	// Tamil
    {0x0BA8, 0x0BAA, 26},	// Tamil
    {0x0BAE, 0x0BB9, 26},	// Tamil
    {0x0BBE, 0x0BC2, 26},	// Tamil
    {0x0BC6, 0x0BC8, 26},	// Tamil
    {0x0BCA, 0x0BCD, 26},	// Tamil
    {0x0BD0, 0x0BD0, 26},	// Tamil
    {0x0BD7, 0x0BD7, 26},	// Tamil
    {0x0BE6, 0x0BFA, 26},	// Tamil
    {0x0C00, 0x0C0C, 27},	// Telugu (Obsolete)
    {0x0C0E, 0x0C10, 27},	// Telugu
    {0x0C12, 0x0C28, 27},	// Telugu
    {0x0C2A, 0x0C39, 27},	// Telugu
    {0x0C3C, 0x0C44, 27},	// Telugu
    {0x0C46, 0x0C48, 27},	// Telugu
    {0x0C4A, 0x0C4D, 27},	// Telugu
    {0x0C55, 0x0C56, 27},	// Telugu
    {0x0C58, 0x0C5A, 27},	// Telugu (Obsolete)
    {0x0C5D, 0x0C5D, 27},	// Telugu
    {0x0C60, 0x0C63, 27},	// Telugu
    {0x0C66, 0x0C6F, 27},	// Telugu
    {0x0C77, 0x0C7F, 27},	// Telugu (Not_XID)
    {0x0C80, 0x0C8C, 19},	// Kannada
    {0x0C8E, 0x0C90, 19},	// Kannada
    {0x0C92, 0x0CA8, 19},	// Kannada
    {0x0CAA, 0x0CB3, 19},	// Kannada
    {0x0CB5, 0x0CB9, 19},	// Kannada
    {0x0CBC, 0x0CC4, 19},	// Kannada
    {0x0CC6, 0x0CC8, 19},	// Kannada
    {0x0CCA, 0x0CCD, 19},	// Kannada
    {0x0CD5, 0x0CD6, 19},	// Kannada
    {0x0CDD, 0x0CDE, 19},	// Kannada
    {0x0CE0, 0x0CE3, 19},	// Kannada
    {0x0CE6, 0x0CEF, 19},	// Kannada
    {0x0CF1, 0x0CF3, 19},	// Kannada
    {0x0D00, 0x0D0C, 22},	// Malayalam
    {0x0D0E, 0x0D10, 22},	// Malayalam
    {0x0D12, 0x0D44, 22},	// Malayalam
    {0x0D46, 0x0D48, 22},	// Malayalam
    {0x0D4A, 0x0D4F, 22},	// Malayalam
    {0x0D54, 0x0D63, 22},	// Malayalam
    {0x0D66, 0x0D7F, 22},	// Malayalam
    {0x0D81, 0x0D83, 25},	// Sinhala
    {0x0D85, 0x0D96, 25},	// Sinhala
    {0x0D9A, 0x0DB1, 25},	// Sinhala
    {0x0DB3, 0x0DBB, 25},	// Sinhala
    {0x0DBD, 0x0DBD, 25},	// Sinhala
    {0x0DC0, 0x0DC6, 25},	// Sinhala
    {0x0DCA, 0x0DCA, 25},	// Sinhala
    {0x0DCF, 0x0DD4, 25},	// Sinhala
    {0x0DD6, 0x0DD6, 25},	// Sinhala
    {0x0DD8, 0x0DDF, 25},	// Sinhala
    {0x0DE6, 0x0DEF, 25},	// Sinhala (Obsolete)
    {0x0DF2, 0x0DF4, 25},	// Sinhala
    {0x0E01, 0x0E3A, 29},	// Thai
    {0x0E3F, 0x0E3F, 0},	// Common (Not_XID)
    {0x0E40, 0x0E5B, 29},	// Thai
    {0x0E81, 0x0E82, 21},	// Lao
    {0x0E84, 0x0E84, 21},	// Lao
    {0x0E86, 0x0E8A, 21},	// Lao
    {0x0E8C, 0x0EA3, 21},	// Lao
    {0x0EA5, 0x0EA5, 21},	// Lao
    {0x0EA7, 0x0EBD, 21},	// Lao
    {0x0EC0, 0x0EC4, 21},	// Lao
    {0x0EC6, 0x0EC6, 21},	// Lao
    {0x0EC8, 0x0ECE, 21},	// Lao
    {0x0ED0, 0x0ED9, 21},	// Lao
    {0x0EDC, 0x0EDF, 21},	// Lao (Not_NFKC)
    {0x0F00, 0x0F47, 30},	// Tibetan
    {0x0F49, 0x0F6C, 30},	// Tibetan
    {0x0F71, 0x0F97, 30},	// Tibetan
    {0x0F99, 0x0FBC, 30},	// Tibetan
    {0x0FBE, 0x0FCC, 30},	// Tibetan (Not_XID)
    {0x0FCE, 0x0FD4, 30},	// Tibetan (Not_XID)
    {0x0FD5, 0x0FD8, 0},	// Common (Not_XID)
    {0x0FD9, 0x0FDA, 30},	// Tibetan (Not_XID)
    {0x1000, 0x109F, 23},	// Myanmar
    {0x10A0, 0x10C5, 10},	// Georgian (Obsolete)
    {0x10C7, 0x10C7, 10},	// Georgian
    {0x10CD, 0x10CD, 10},	// Georgian
    {0x10D0, 0x10FA, 10},	// Georgian
    {0x10FB, 0x10FB, 0},	// Common (Not_XID)
    {0x10FC, 0x10FF, 10},	// Georgian (Not_NFKC)
    {0x1100, 0x11FF, 14},	// Hangul (Obsolete)
    {0x1200, 0x1248, 9},	// Ethiopic
    {0x124A, 0x124D, 9},	// Ethiopic
    {0x1250, 0x1256, 9},	// Ethiopic
    {0x1258, 0x1258, 9},	// Ethiopic
    {0x125A, 0x125D, 9},	// Ethiopic
    {0x1260, 0x1288, 9},	// Ethiopic
    {0x128A, 0x128D, 9},	// Ethiopic
    {0x1290, 0x12B0, 9},	// Ethiopic
    {0x12B2, 0x12B5, 9},	// Ethiopic
    {0x12B8, 0x12BE, 9},	// Ethiopic
    {0x12C0, 0x12C0, 9},	// Ethiopic
    {0x12C2, 0x12C5, 9},	// Ethiopic
    {0x12C8, 0x12D6, 9},	// Ethiopic
    {0x12D8, 0x1310, 9},	// Ethiopic
    {0x1312, 0x1315, 9},	// Ethiopic
    {0x1318, 0x135A, 9},	// Ethiopic
    {0x135D, 0x137C, 9},	// Ethiopic
    {0x1380, 0x1399, 9},	// Ethiopic
    {0x13A0, 0x13F5, 143},	// Cherokee (Limited_Use)
    {0x13F8, 0x13FD, 143},	// Cherokee (Limited_Use)
    {0x1400, 0x167F, 140},	// Canadian_Aboriginal (Limited_Use Not_XID)
    {0x1680, 0x169C, 93},	// Ogham (Exclusion Not_XID)
    {0x16A0, 0x16EA, 112},	// Runic (Exclusion)
    {0x16EB, 0x16ED, 0},	// Common (Exclusion Not_XID)
    {0x16EE, 0x16F8, 112},	// Runic (Exclusion)
    {0x1700, 0x1715, 122},	// Tagalog (Exclusion)
    {0x171F, 0x171F, 122},	// Tagalog (Exclusion)
    {0x1720, 0x1734, 60},	// Hanunoo (Exclusion)
    {0x1735, 0x1736, 0},	// Common (Exclusion Not_XID)
    {0x1740, 0x1753, 39},	// Buhid (Exclusion)
    {0x1760, 0x176C, 123},	// Tagbanwa (Exclusion)
    {0x176E, 0x1770, 123},	// Tagbanwa (Exclusion)
    {0x1772, 0x1773, 123},	// Tagbanwa (Exclusion)
    {0x1780, 0x17DD, 20},	// Khmer
    {0x17E0, 0x17E9, 20},	// Khmer
    {0x17F0, 0x17F9, 20},	// Khmer (Not_XID)
    {0x1800, 0x1801, 86},	// Mongolian (Exclusion Not_XID)
    {0x1802, 0x1803, 0},	// Common (Exclusion Not_XID)
    {0x1804, 0x1804, 86},	// Mongolian (Exclusion Not_XID)
    {0x1805, 0x1805, 0},	// Common (Exclusion Not_XID)
    {0x1806, 0x1819, 86},	// Mongolian (Exclusion Not_XID)
    {0x1820, 0x1878, 86},	// Mongolian (Exclusion)
    {0x1880, 0x18AA, 86},	// Mongolian (Exclusion)
    {0x18B0, 0x18F5, 140},	// Canadian_Aboriginal (Limited_Use)
    {0x1900, 0x191E, 148},	// Limbu (Limited_Use)
    {0x1920, 0x192B, 148},	// Limbu (Limited_Use)
    {0x1930, 0x193B, 148},	// Limbu (Limited_Use)
    {0x1940, 0x1940, 148},	// Limbu (Limited_Use Not_XID)
    {0x1944, 0x194F, 148},	// Limbu (Limited_Use Not_XID)
    {0x1950, 0x196D, 163},	// Tai_Le (Limited_Use)
    {0x1970, 0x1974, 163},	// Tai_Le (Limited_Use)
    {0x1980, 0x19AB, 153},	// New_Tai_Lue (Limited_Use)
    {0x19B0, 0x19C9, 153},	// New_Tai_Lue (Limited_Use)
    {0x19D0, 0x19DA, 153},	// New_Tai_Lue (Limited_Use)
    {0x19DE, 0x19DF, 153},	// New_Tai_Lue (Limited_Use Not_XID)
    {0x19E0, 0x19FF, 20},	// Khmer (Not_XID)
    {0x1A00, 0x1A1B, 38},	// Buginese (Exclusion)
    {0x1A1E, 0x1A1F, 38},	// Buginese (Exclusion Not_XID)
    {0x1A20, 0x1A5E, 164},	// Tai_Tham (Limited_Use)
    {0x1A60, 0x1A7C, 164},	// Tai_Tham (Limited_Use)
    {0x1A7F, 0x1A89, 164},	// Tai_Tham (Limited_Use)
    {0x1A90, 0x1A99, 164},	// Tai_Tham (Limited_Use)
    {0x1AA0, 0x1AAD, 164},	// Tai_Tham (Limited_Use Not_XID)
    {0x1AB0, 0x1ACE, 1},	// Inherited (Obsolete)
    {0x1B00, 0x1B4C, 137},	// Balinese (Limited_Use)
    {0x1B4E, 0x1B7F, 137},	// Balinese (Limited_Use Not_XID)
    {0x1B80, 0x1BBF, 160},	// Sundanese (Limited_Use)
    {0x1BC0, 0x1BF3, 139},	// Batak (Limited_Use)
    {0x1BFC, 0x1BFF, 139},	// Batak (Limited_Use Not_XID)
    {0x1C00, 0x1C37, 147},	// Lepcha (Limited_Use)
    {0x1C3B, 0x1C49, 147},	// Lepcha (Limited_Use Not_XID)
    {0x1C4D, 0x1C4F, 147},	// Lepcha (Limited_Use)
    {0x1C50, 0x1C7F, 157},	// Ol_Chiki (Limited_Use)
    {0x1C80, 0x1C8A, 7},	// Cyrillic (Obsolete)
    {0x1C90, 0x1CBA, 10},	// Georgian
    {0x1CBD, 0x1CBF, 10},	// Georgian
    {0x1CC0, 0x1CC7, 160},	// Sundanese (Limited_Use Not_XID)
    {0x1CD0, 0x1CD2, 1},	// Inherited (Obsolete)
    {0x1CD3, 0x1CD3, 0},	// Common (Obsolete Not_XID)
    {0x1CD4, 0x1CE0, 1},	// Inherited (Obsolete)
    {0x1CE1, 0x1CE1, 0},	// Common (Obsolete)
    {0x1CE2, 0x1CE8, 1},	// Inherited (Obsolete)
    {0x1CE9, 0x1CEC, 0},	// Common (Obsolete)
    {0x1CED, 0x1CED, 1},	// Inherited (Obsolete)
    {0x1CEE, 0x1CF3, 0},	// Common (Obsolete)
    {0x1CF4, 0x1CF4, 1},	// Inherited (Obsolete)
    {0x1CF5, 0x1CF7, 0},	// Common (Obsolete)
    {0x1CF8, 0x1CF9, 1},	// Inherited (Obsolete)
    {0x1CFA, 0x1CFA, 0},	// Common (Exclusion)
    {0x1D00, 0x1D25, 2},	// Latin
    {0x1D26, 0x1D2A, 11},	// Greek
    {0x1D2B, 0x1D2B, 7},	// Cyrillic
    {0x1D2C, 0x1D5C, 2},	// Latin (Not_NFKC)
    {0x1D5D, 0x1D61, 11},	// Greek (Not_NFKC)
    {0x1D62, 0x1D65, 2},	// Latin (Not_NFKC)
    {0x1D66, 0x1D6A, 11},	// Greek (Not_NFKC)
    {0x1D6B, 0x1D77, 2},	// Latin
    {0x1D78, 0x1D78, 7},	// Cyrillic (Not_NFKC)
    {0x1D79, 0x1DBE, 2},	// Latin
    {0x1DBF, 0x1DBF, 11},	// Greek (Not_NFKC)
    {0x1DC0, 0x1DFF, 1},	// Inherited (Technical Obsolete)
    {0x1E00, 0x1EFF, 2},	// Latin
    {0x1F00, 0x1F15, 11},	// Greek
    {0x1F18, 0x1F1D, 11},	// Greek
    {0x1F20, 0x1F45, 11},	// Greek
    {0x1F48, 0x1F4D, 11},	// Greek
    {0x1F50, 0x1F57, 11},	// Greek
    {0x1F59, 0x1F59, 11},	// Greek
    {0x1F5B, 0x1F5B, 11},	// Greek
    {0x1F5D, 0x1F5D, 11},	// Greek
    {0x1F5F, 0x1F7D, 11},	// Greek
    {0x1F80, 0x1FB4, 11},	// Greek
    {0x1FB6, 0x1FC4, 11},	// Greek
    {0x1FC6, 0x1FD3, 11},	// Greek
    {0x1FD6, 0x1FDB, 11},	// Greek
    {0x1FDD, 0x1FEF, 11},	// Greek (Not_NFKC)
    {0x1FF2, 0x1FF4, 11},	// Greek
    {0x1FF6, 0x1FFE, 11},	// Greek
    {0x2000, 0x200B, 0},	// Common (Not_NFKC)
    {0x200C, 0x200D, 1},	// Inherited (Default_Ignorable)
    {0x200E, 0x2064, 0},	// Common (Default_Ignorable)
    {0x2066, 0x2070, 0},	// Common (Default_Ignorable)
    {0x2071, 0x2071, 2},	// Latin (Not_NFKC)
    {0x2074, 0x207E, 0},	// Common (Not_NFKC)
    {0x207F, 0x207F, 2},	// Latin (Not_NFKC)
    {0x2080, 0x208E, 0},	// Common (Not_NFKC)
    {0x2090, 0x209C, 2},	// Latin (Not_NFKC)
    {0x20A0, 0x20C0, 0},	// Common (Not_XID)
    {0x20D0, 0x20F0, 1},	// Inherited
    {0x2100, 0x2125, 0},	// Common (Not_NFKC)
    {0x2126, 0x2126, 11},	// Greek (Not_NFKC)
    {0x2127, 0x2129, 0},	// Common (Obsolete Not_XID)
    {0x212A, 0x212B, 2},	// Latin (Not_NFKC)
    {0x212C, 0x2131, 0},	// Common (Not_NFKC)
    {0x2132, 0x2132, 2},	// Latin (Obsolete)
    {0x2133, 0x214D, 0},	// Common (Not_NFKC)
    {0x214E, 0x214E, 2},	// Latin (Obsolete)
    {0x214F, 0x215F, 0},	// Common (Obsolete Not_XID)
    {0x2160, 0x2188, 2},	// Latin (Not_NFKC)
    {0x2189, 0x218B, 0},	// Common (Not_NFKC)
    {0x2190, 0x2429, 0},	// Common (Not_XID)
    {0x2440, 0x244A, 0},	// Common (Not_XID)
    {0x2460, 0x27FF, 0},	// Common (Not_NFKC)
    {0x2800, 0x28FF, 37},	// Braille (Technical Not_XID)
    {0x2900, 0x2B73, 0},	// Common (Not_XID)
    {0x2B76, 0x2B95, 0},	// Common (Not_XID)
    {0x2B97, 0x2BFF, 0},	// Common (Not_XID)
    {0x2C00, 0x2C5F, 55},	// Glagolitic (Exclusion)
    {0x2C60, 0x2C7F, 2},	// Latin
    {0x2C80, 0x2CF3, 43},	// Coptic (Exclusion)
    {0x2CF9, 0x2CFF, 43},	// Coptic (Exclusion Not_XID)
    {0x2D00, 0x2D25, 10},	// Georgian (Obsolete)
    {0x2D27, 0x2D27, 10},	// Georgian
    {0x2D2D, 0x2D2D, 10},	// Georgian
    {0x2D30, 0x2D67, 166},	// Tifinagh (Limited_Use)
    {0x2D6F, 0x2D70, 166},	// Tifinagh (Not_NFKC)
    {0x2D7F, 0x2D7F, 166},	// Tifinagh (Limited_Use)
    {0x2D80, 0x2D96, 9},	// Ethiopic
    {0x2DA0, 0x2DA6, 9},	// Ethiopic
    {0x2DA8, 0x2DAE, 9},	// Ethiopic
    {0x2DB0, 0x2DB6, 9},	// Ethiopic
    {0x2DB8, 0x2DBE, 9},	// Ethiopic
    {0x2DC0, 0x2DC6, 9},	// Ethiopic
    {0x2DC8, 0x2DCE, 9},	// Ethiopic
    {0x2DD0, 0x2DD6, 9},	// Ethiopic
    {0x2DD8, 0x2DDE, 9},	// Ethiopic
    {0x2DE0, 0x2DFF, 7},	// Cyrillic (Obsolete)
    {0x2E00, 0x2E5D, 0},	// Common (Technical Obsolete Not_XID)
    {0x2E80, 0x2E99, 15},	// Han (Not_XID)
    {0x2E9B, 0x2EF3, 15},	// Han (Not_XID)
    {0x2F00, 0x2FD5, 15},	// Han (Not_NFKC)
    {0x2FF0, 0x3004, 0},	// Common (Not_XID)
    {0x3005, 0x3005, 15},	// Han
    {0x3006, 0x3006, 0},	// Common
    {0x3007, 0x3007, 15},	// Han
    {0x3008, 0x3020, 0},	// Common (Not_XID)
    {0x3021, 0x3029, 15},	// Han
    {0x302A, 0x302D, 1},	// Inherited
    {0x302E, 0x302F, 14},	// Hangul (Technical Obsolete)
    {0x3030, 0x3037, 0},	// Common (Not_XID)
    {0x3038, 0x303B, 15},	// Han (Not_NFKC)
    {0x303C, 0x303F, 0},	// Common
    {0x3041, 0x3096, 17},	// Hiragana
    {0x3099, 0x309A, 1},	// Inherited
    {0x309B, 0x309C, 0},	// Common (Not_NFKC)
    {0x309D, 0x309F, 17},	// Hiragana
    {0x30A0, 0x30A0, 0},	// Common
    {0x30A1, 0x30FA, 18},	// Katakana
    {0x30FB, 0x30FC, 0},	// Common
    {0x30FD, 0x30FF, 18},	// Katakana
    {0x3105, 0x312F, 6},	// Bopomofo
    {0x3131, 0x318E, 14},	// Hangul (Not_NFKC)
    {0x3190, 0x319F, 0},	// Common (Not_XID)
    {0x31A0, 0x31BF, 6},	// Bopomofo
    {0x31C0, 0x31E5, 0},	// Common (Not_XID)
    {0x31EF, 0x31EF, 0},	// Common (Not_XID)
    {0x31F0, 0x31FF, 18},	// Katakana (Obsolete)
    {0x3200, 0x321E, 14},	// Hangul (Not_NFKC)
    {0x3220, 0x325F, 0},	// Common (Not_NFKC)
    {0x3260, 0x327E, 14},	// Hangul (Not_NFKC)
    {0x327F, 0x32CF, 0},	// Common (Technical Not_XID)
    {0x32D0, 0x32FE, 18},	// Katakana (Not_NFKC)
    {0x32FF, 0x32FF, 0},	// Common (Not_NFKC)
    {0x3300, 0x3357, 18},	// Katakana (Not_NFKC)
    {0x3358, 0x33FF, 0},	// Common (Not_NFKC)
    {0x3400, 0x4DBF, 15},	// Han
    {0x4DC0, 0x4DFF, 0},	// Common (Technical Not_XID)
    {0x4E00, 0x9FFF, 15},	// Han
    {0xA000, 0xA48C, 169},	// Yi (Limited_Use)
    {0xA490, 0xA4C6, 169},	// Yi (Limited_Use Not_XID)
    {0xA4D0, 0xA4FF, 149},	// Lisu (Limited_Use)
    {0xA500, 0xA62B, 167},	// Vai (Limited_Use)
    {0xA640, 0xA69F, 7},	// Cyrillic (Obsolete)
    {0xA6A0, 0xA6F7, 138},	// Bamum (Limited_Use)
    {0xA700, 0xA721, 0},	// Common (Obsolete Not_XID)
    {0xA722, 0xA787, 2},	// Latin (Technical Obsolete)
    {0xA788, 0xA78A, 0},	// Common
    {0xA78B, 0xA7CD, 2},	// Latin (Uncommon_Use)
    {0xA7D0, 0xA7D1, 2},	// Latin
    {0xA7D3, 0xA7D3, 2},	// Latin
    {0xA7D5, 0xA7DC, 2},	// Latin
    {0xA7F2, 0xA7FF, 2},	// Latin (Not_NFKC)
    {0xA800, 0xA82C, 161},	// Syloti_Nagri (Limited_Use)
    {0xA830, 0xA839, 0},	// Common (Not_XID)
    {0xA840, 0xA877, 108},	// Phags_Pa (Exclusion)
    {0xA880, 0xA8C5, 159},	// Saurashtra (Limited_Use)
    {0xA8CE, 0xA8D9, 159},	// Saurashtra (Limited_Use Not_XID)
    {0xA8E0, 0xA8FF, 8},	// Devanagari (Obsolete)
    {0xA900, 0xA92D, 146},	// Kayah_Li (Limited_Use)
    {0xA92E, 0xA92E, 0},	// Common (Not_XID)
    {0xA92F, 0xA92F, 146},	// Kayah_Li (Limited_Use Not_XID)
    {0xA930, 0xA953, 111},	// Rejang (Exclusion)
    {0xA95F, 0xA95F, 111},	// Rejang (Exclusion Not_XID)
    {0xA960, 0xA97C, 14},	// Hangul (Obsolete)
    {0xA980, 0xA9CD, 145},	// Javanese (Limited_Use)
    {0xA9CF, 0xA9CF, 0},	// Common (Limited_Use Uncommon_Use)
    {0xA9D0, 0xA9D9, 145},	// Javanese (Limited_Use)
    {0xA9DE, 0xA9DF, 145},	// Javanese (Limited_Use Not_XID)
    {0xA9E0, 0xA9FE, 23},	// Myanmar (Obsolete)
    {0xAA00, 0xAA36, 142},	// Cham (Limited_Use)
    {0xAA40, 0xAA4D, 142},	// Cham (Limited_Use)
    {0xAA50, 0xAA59, 142},	// Cham (Limited_Use)
    {0xAA5C, 0xAA5F, 142},	// Cham (Limited_Use Not_XID)
    {0xAA60, 0xAA7F, 23},	// Myanmar
    {0xAA80, 0xAAC2, 165},	// Tai_Viet (Limited_Use)
    {0xAADB, 0xAADF, 165},	// Tai_Viet (Limited_Use)
    {0xAAE0, 0xAAF6, 151},	// Meetei_Mayek (Limited_Use)
    {0xAB01, 0xAB06, 9},	// Ethiopic
    {0xAB09, 0xAB0E, 9},	// Ethiopic
    {0xAB11, 0xAB16, 9},	// Ethiopic
    {0xAB20, 0xAB26, 9},	// Ethiopic
    {0xAB28, 0xAB2E, 9},	// Ethiopic
    {0xAB30, 0xAB5A, 2},	// Latin (Obsolete)
    {0xAB5B, 0xAB5B, 0},	// Common (Not_XID)
    {0xAB5C, 0xAB64, 2},	// Latin (Not_NFKC)
    {0xAB65, 0xAB65, 11},	// Greek (Obsolete)
    {0xAB66, 0xAB69, 2},	// Latin
    {0xAB6A, 0xAB6B, 0},	// Common (Not_XID)
    {0xAB70, 0xABBF, 143},	// Cherokee (Limited_Use)
    {0xABC0, 0xABED, 151},	// Meetei_Mayek (Limited_Use)
    {0xABF0, 0xABF9, 151},	// Meetei_Mayek (Limited_Use)
    {0xAC00, 0xD7A3, 14},	// Hangul
    {0xD7B0, 0xD7C6, 14},	// Hangul (Obsolete)
    {0xD7CB, 0xD7FB, 14},	// Hangul (Obsolete)
    {0xF900, 0xFA6D, 15},	// Han (Not_NFKC)
    {0xFA70, 0xFAD9, 15},	// Han (Not_NFKC)
    {0xFB00, 0xFB06, 2},	// Latin (Not_NFKC)
    {0xFB13, 0xFB17, 4},	// Armenian (Not_NFKC)
    {0xFB1D, 0xFB36, 16},	// Hebrew (Not_NFKC)
    {0xFB38, 0xFB3C, 16},	// Hebrew (Not_NFKC)
    {0xFB3E, 0xFB3E, 16},	// Hebrew (Not_NFKC)
    {0xFB40, 0xFB41, 16},	// Hebrew (Not_NFKC)
    {0xFB43, 0xFB44, 16},	// Hebrew (Not_NFKC)
    {0xFB46, 0xFB4F, 16},	// Hebrew (Not_NFKC)
    {0xFB50, 0xFBC2, 3},	// Arabic (Not_NFKC)
    {0xFBD3, 0xFD3D, 3},	// Arabic (Not_NFKC)
    {0xFD3E, 0xFD3F, 0},	// Common (Technical Not_XID)
    {0xFD40, 0xFD8F, 3},	// Arabic (Technical Not_XID)
    {0xFD92, 0xFDC7, 3},	// Arabic (Not_NFKC)
    {0xFDCF, 0xFDCF, 3},	// Arabic (Technical Not_XID)
    {0xFDF0, 0xFDFF, 3},	// Arabic (Not_NFKC)
    {0xFE00, 0xFE0F, 1},	// Inherited (Default_Ignorable)
    {0xFE10, 0xFE19, 0},	// Common (Not_NFKC)
    {0xFE20, 0xFE2D, 1},	// Inherited
    {0xFE2E, 0xFE2F, 7},	// Cyrillic (Uncommon_Use Technical)
    {0xFE30, 0xFE52, 0},	// Common (Not_NFKC)
    {0xFE54, 0xFE66, 0},	// Common (Not_NFKC)
    {0xFE68, 0xFE6B, 0},	// Common (Not_NFKC)
    {0xFE70, 0xFE74, 3},	// Arabic (Not_NFKC)
    {0xFE76, 0xFEFC, 3},	// Arabic (Not_NFKC)
    {0xFEFF, 0xFEFF, 0},	// Common (Default_Ignorable)
    {0xFF01, 0xFF20, 0},	// Common (Not_NFKC)
    {0xFF21, 0xFF3A, 2},	// Latin (Not_NFKC)
    {0xFF3B, 0xFF40, 0},	// Common (Not_NFKC)
    {0xFF41, 0xFF5A, 2},	// Latin (Not_NFKC)
    {0xFF5B, 0xFF65, 0},	// Common (Not_NFKC)
    {0xFF66, 0xFF6F, 18},	// Katakana (Not_NFKC)
    {0xFF70, 0xFF70, 0},	// Common (Not_NFKC)
    {0xFF71, 0xFF9D, 18},	// Katakana (Not_NFKC)
    {0xFF9E, 0xFF9F, 0},	// Common (Not_NFKC)
    {0xFFA0, 0xFFBE, 14},	// Hangul (Default_Ignorable)
    {0xFFC2, 0xFFC7, 14},	// Hangul (Not_NFKC)
    {0xFFCA, 0xFFCF, 14},	// Hangul (Not_NFKC)
    {0xFFD2, 0xFFD7, 14},	// Hangul (Not_NFKC)
    {0xFFDA, 0xFFDC, 14},	// Hangul (Not_NFKC)
    {0xFFE0, 0xFFE6, 0},	// Common (Not_NFKC)
    {0xFFE8, 0xFFEE, 0},	// Common (Not_NFKC)
    {0xFFF9, 0xFFFD, 0},	// Common (Not_XID)
    // clang-format on
}; // 458 ranges, 83 single codepoints
#  else
extern const struct sc16 xid_script_list16[541];
#  endif

#  ifndef EXTERN_SCRIPTS
LOCAL const struct sc xid_script_list32[] = {
    // clang-format off
    {0x10000, 0x1000B, 73},	// Linear_B (Exclusion)
    {0x1000D, 0x10026, 73},	// Linear_B (Exclusion)
    {0x10028, 0x1003A, 73},	// Linear_B (Exclusion)
    {0x1003C, 0x1003D, 73},	// Linear_B (Exclusion)
    {0x1003F, 0x1004D, 73},	// Linear_B (Exclusion)
    {0x10050, 0x1005D, 73},	// Linear_B (Exclusion)
    {0x10080, 0x100FA, 73},	// Linear_B (Exclusion)
    {0x10100, 0x10102, 0},	// Common (Exclusion Not_XID)
    {0x10107, 0x10133, 0},	// Common (Exclusion Not_XID)
    {0x10137, 0x1013F, 0},	// Common (Exclusion Not_XID)
    {0x10140, 0x1018E, 11},	// Greek (Obsolete)
    {0x10190, 0x1019C, 0},	// Common (Not_XID)
    {0x101A0, 0x101A0, 11},	// Greek (Not_XID)
    {0x101D0, 0x101FC, 0},	// Common (Obsolete Not_XID)
    {0x101FD, 0x101FD, 1},	// Inherited (Obsolete)
    {0x10280, 0x1029C, 74},	// Lycian (Exclusion)
    {0x102A0, 0x102D0, 40},	// Carian (Exclusion)
    {0x102E0, 0x102E0, 1},	// Inherited (Obsolete)
    {0x102E1, 0x102FB, 0},	// Common (Obsolete Not_XID)
    {0x10300, 0x10323, 96},	// Old_Italic (Exclusion)
    {0x1032D, 0x1032F, 96},	// Old_Italic (Exclusion)
    {0x10330, 0x1034A, 56},	// Gothic (Exclusion)
    {0x10350, 0x1037A, 98},	// Old_Permic (Exclusion)
    {0x10380, 0x1039D, 131},	// Ugaritic (Exclusion)
    {0x1039F, 0x1039F, 131},	// Ugaritic (Exclusion Not_XID)
    {0x103A0, 0x103C3, 99},	// Old_Persian (Exclusion)
    {0x103C8, 0x103D5, 99},	// Old_Persian (Exclusion)
    {0x10400, 0x1044F, 47},	// Deseret (Exclusion)
    {0x10450, 0x1047F, 115},	// Shavian (Exclusion)
    {0x10480, 0x1049D, 104},	// Osmanya (Exclusion)
    {0x104A0, 0x104A9, 104},	// Osmanya (Exclusion)
    {0x104B0, 0x104D3, 158},	// Osage (Limited_Use)
    {0x104D8, 0x104FB, 158},	// Osage (Limited_Use)
    {0x10500, 0x10527, 52},	// Elbasan (Exclusion)
    {0x10530, 0x10563, 41},	// Caucasian_Albanian (Exclusion)
    {0x1056F, 0x1056F, 41},	// Caucasian_Albanian (Exclusion Not_XID)
    {0x10570, 0x1057A, 132},	// Vithkuqi (Exclusion)
    {0x1057C, 0x1058A, 132},	// Vithkuqi (Exclusion)
    {0x1058C, 0x10592, 132},	// Vithkuqi (Exclusion)
    {0x10594, 0x10595, 132},	// Vithkuqi (Exclusion)
    {0x10597, 0x105A1, 132},	// Vithkuqi (Exclusion)
    {0x105A3, 0x105B1, 132},	// Vithkuqi (Exclusion)
    {0x105B3, 0x105B9, 132},	// Vithkuqi (Exclusion)
    {0x105BB, 0x105BC, 132},	// Vithkuqi (Exclusion)
    {0x105C0, 0x105F3, 128},	// Todhri (Exclusion)
    {0x10600, 0x10736, 72},	// Linear_A (Exclusion)
    {0x10740, 0x10755, 72},	// Linear_A (Exclusion)
    {0x10760, 0x10767, 72},	// Linear_A (Exclusion)
    {0x10780, 0x10785, 2},	// Latin (Uncommon_Use)
    {0x10787, 0x107B0, 2},	// Latin (Not_NFKC)
    {0x107B2, 0x107BA, 2},	// Latin (Not_NFKC)
    {0x10800, 0x10805, 45},	// Cypriot (Exclusion)
    {0x10808, 0x10808, 45},	// Cypriot (Exclusion)
    {0x1080A, 0x10835, 45},	// Cypriot (Exclusion)
    {0x10837, 0x10838, 45},	// Cypriot (Exclusion)
    {0x1083C, 0x1083C, 45},	// Cypriot (Exclusion)
    {0x1083F, 0x1083F, 45},	// Cypriot (Exclusion)
    {0x10840, 0x10855, 62},	// Imperial_Aramaic (Exclusion)
    {0x10857, 0x1085F, 62},	// Imperial_Aramaic (Exclusion Not_XID)
    {0x10860, 0x1087F, 106},	// Palmyrene (Exclusion)
    {0x10880, 0x1089E, 89},	// Nabataean (Exclusion)
    {0x108A7, 0x108AF, 89},	// Nabataean (Exclusion Not_XID)
    {0x108E0, 0x108F2, 61},	// Hatran (Exclusion)
    {0x108F4, 0x108F5, 61},	// Hatran (Exclusion)
    {0x108FB, 0x108FF, 61},	// Hatran (Exclusion Not_XID)
    {0x10900, 0x1091B, 109},	// Phoenician (Exclusion)
    {0x1091F, 0x1091F, 109},	// Phoenician (Exclusion Not_XID)
    {0x10920, 0x10939, 75},	// Lydian (Exclusion)
    {0x1093F, 0x1093F, 75},	// Lydian (Exclusion Not_XID)
    {0x10980, 0x1099F, 84},	// Meroitic_Hieroglyphs (Exclusion)
    {0x109A0, 0x109B7, 83},	// Meroitic_Cursive (Exclusion)
    {0x109BC, 0x109CF, 83},	// Meroitic_Cursive (Exclusion Not_XID)
    {0x109D2, 0x109FF, 83},	// Meroitic_Cursive (Exclusion Not_XID)
    {0x10A00, 0x10A03, 67},	// Kharoshthi (Exclusion)
    {0x10A05, 0x10A06, 67},	// Kharoshthi (Exclusion)
    {0x10A0C, 0x10A13, 67},	// Kharoshthi (Exclusion)
    {0x10A15, 0x10A17, 67},	// Kharoshthi (Exclusion)
    {0x10A19, 0x10A35, 67},	// Kharoshthi (Exclusion)
    {0x10A38, 0x10A3A, 67},	// Kharoshthi (Exclusion)
    {0x10A3F, 0x10A48, 67},	// Kharoshthi (Exclusion)
    {0x10A50, 0x10A58, 67},	// Kharoshthi (Exclusion Not_XID)
    {0x10A60, 0x10A7F, 101},	// Old_South_Arabian (Exclusion)
    {0x10A80, 0x10A9F, 97},	// Old_North_Arabian (Exclusion)
    {0x10AC0, 0x10AE6, 78},	// Manichaean (Exclusion)
    {0x10AEB, 0x10AF6, 78},	// Manichaean (Exclusion Not_XID)
    {0x10B00, 0x10B35, 33},	// Avestan (Exclusion)
    {0x10B39, 0x10B3F, 33},	// Avestan (Exclusion Not_XID)
    {0x10B40, 0x10B55, 64},	// Inscriptional_Parthian (Exclusion)
    {0x10B58, 0x10B5F, 64},	// Inscriptional_Parthian (Exclusion Not_XID)
    {0x10B60, 0x10B72, 63},	// Inscriptional_Pahlavi (Exclusion)
    {0x10B78, 0x10B7F, 63},	// Inscriptional_Pahlavi (Exclusion Not_XID)
    {0x10B80, 0x10B91, 110},	// Psalter_Pahlavi (Exclusion)
    {0x10B99, 0x10B9C, 110},	// Psalter_Pahlavi (Exclusion Not_XID)
    {0x10BA9, 0x10BAF, 110},	// Psalter_Pahlavi (Exclusion Not_XID)
    {0x10C00, 0x10C48, 102},	// Old_Turkic (Exclusion)
    {0x10C80, 0x10CB2, 95},	// Old_Hungarian (Exclusion)
    {0x10CC0, 0x10CF2, 95},	// Old_Hungarian (Exclusion)
    {0x10CFA, 0x10CFF, 95},	// Old_Hungarian (Exclusion Not_XID)
    {0x10D00, 0x10D27, 144},	// Hanifi_Rohingya (Limited_Use)
    {0x10D30, 0x10D39, 144},	// Hanifi_Rohingya (Limited_Use)
    {0x10D40, 0x10D65, 54},	// Garay (Exclusion)
    {0x10D69, 0x10D85, 54},	// Garay (Exclusion)
    {0x10D8E, 0x10D8F, 54},	// Garay (Exclusion Not_XID)
    {0x10E60, 0x10E7E, 3},	// Arabic (Not_XID)
    {0x10E80, 0x10EA9, 134},	// Yezidi (Exclusion)
    {0x10EAB, 0x10EAD, 134},	// Yezidi (Exclusion)
    {0x10EB0, 0x10EB1, 134},	// Yezidi (Exclusion)
    {0x10EC2, 0x10EC4, 3},	// Arabic (Uncommon_Use)
    {0x10EFC, 0x10EFF, 3},	// Arabic (Uncommon_Use)
    {0x10F00, 0x10F27, 100},	// Old_Sogdian (Exclusion)
    {0x10F30, 0x10F59, 118},	// Sogdian (Exclusion)
    {0x10F70, 0x10F89, 103},	// Old_Uyghur (Exclusion)
    {0x10FB0, 0x10FCB, 42},	// Chorasmian (Exclusion)
    {0x10FE0, 0x10FF6, 53},	// Elymaic (Exclusion)
    {0x11000, 0x1104D, 36},	// Brahmi (Exclusion)
    {0x11052, 0x11075, 36},	// Brahmi (Exclusion Not_XID)
    {0x1107F, 0x1107F, 36},	// Brahmi (Exclusion)
    {0x11080, 0x110C2, 65},	// Kaithi (Exclusion)
    {0x110CD, 0x110CD, 65},	// Kaithi (Exclusion Not_XID)
    {0x110D0, 0x110E8, 119},	// Sora_Sompeng (Exclusion)
    {0x110F0, 0x110F9, 119},	// Sora_Sompeng (Exclusion)
    {0x11100, 0x11134, 141},	// Chakma (Limited_Use)
    {0x11136, 0x11147, 141},	// Chakma (Limited_Use)
    {0x11150, 0x11176, 76},	// Mahajani (Exclusion)
    {0x11180, 0x111DF, 114},	// Sharada (Exclusion)
    {0x111E1, 0x111F4, 25},	// Sinhala (Not_XID)
    {0x11200, 0x11211, 69},	// Khojki (Exclusion)
    {0x11213, 0x11241, 69},	// Khojki (Exclusion)
    {0x11280, 0x11286, 88},	// Multani (Exclusion)
    {0x11288, 0x11288, 88},	// Multani (Exclusion)
    {0x1128A, 0x1128D, 88},	// Multani (Exclusion)
    {0x1128F, 0x1129D, 88},	// Multani (Exclusion)
    {0x1129F, 0x112A9, 88},	// Multani (Exclusion)
    {0x112B0, 0x112EA, 70},	// Khudawadi (Exclusion)
    {0x112F0, 0x112F9, 70},	// Khudawadi (Exclusion)
    {0x11300, 0x11303, 57},	// Grantha (Exclusion)
    {0x11305, 0x1130C, 57},	// Grantha (Exclusion)
    {0x1130F, 0x11310, 57},	// Grantha (Exclusion)
    {0x11313, 0x11328, 57},	// Grantha (Exclusion)
    {0x1132A, 0x11330, 57},	// Grantha (Exclusion)
    {0x11332, 0x11333, 57},	// Grantha (Exclusion)
    {0x11335, 0x11339, 57},	// Grantha (Exclusion)
    {0x1133B, 0x1133B, 1},	// Inherited
    {0x1133C, 0x11344, 57},	// Grantha
    {0x11347, 0x11348, 57},	// Grantha (Exclusion)
    {0x1134B, 0x1134D, 57},	// Grantha (Exclusion)
    {0x11350, 0x11350, 57},	// Grantha (Exclusion)
    {0x11357, 0x11357, 57},	// Grantha (Exclusion)
    {0x1135D, 0x11363, 57},	// Grantha (Exclusion)
    {0x11366, 0x1136C, 57},	// Grantha (Exclusion)
    {0x11370, 0x11374, 57},	// Grantha (Exclusion)
    {0x11380, 0x11389, 130},	// Tulu_Tigalari (Exclusion)
    {0x1138B, 0x1138B, 130},	// Tulu_Tigalari (Exclusion)
    {0x1138E, 0x1138E, 130},	// Tulu_Tigalari (Exclusion)
    {0x11390, 0x113B5, 130},	// Tulu_Tigalari (Exclusion)
    {0x113B7, 0x113C0, 130},	// Tulu_Tigalari (Exclusion)
    {0x113C2, 0x113C2, 130},	// Tulu_Tigalari (Exclusion)
    {0x113C5, 0x113C5, 130},	// Tulu_Tigalari (Exclusion)
    {0x113C7, 0x113CA, 130},	// Tulu_Tigalari (Exclusion)
    {0x113CC, 0x113D5, 130},	// Tulu_Tigalari (Exclusion)
    {0x113D7, 0x113D8, 130},	// Tulu_Tigalari (Exclusion Not_XID)
    {0x113E1, 0x113E2, 130},	// Tulu_Tigalari (Exclusion)
    {0x11400, 0x1145B, 154},	// Newa (Limited_Use)
    {0x1145D, 0x11461, 154},	// Newa (Limited_Use Not_XID)
    {0x11480, 0x114C7, 127},	// Tirhuta (Exclusion)
    {0x114D0, 0x114D9, 127},	// Tirhuta (Exclusion)
    {0x11580, 0x115B5, 116},	// Siddham (Exclusion)
    {0x115B8, 0x115DD, 116},	// Siddham (Exclusion)
    {0x11600, 0x11644, 85},	// Modi (Exclusion)
    {0x11650, 0x11659, 85},	// Modi (Exclusion)
    {0x11660, 0x1166C, 86},	// Mongolian (Exclusion Not_XID)
    {0x11680, 0x116B9, 124},	// Takri (Exclusion)
    {0x116C0, 0x116C9, 124},	// Takri (Exclusion)
    {0x116D0, 0x116E3, 23},	// Myanmar (Uncommon_Use)
    {0x11700, 0x1171A, 31},	// Ahom (Exclusion)
    {0x1171D, 0x1172B, 31},	// Ahom (Exclusion)
    {0x11730, 0x11746, 31},	// Ahom (Exclusion)
    {0x11800, 0x1183B, 49},	// Dogra (Exclusion)
    {0x118A0, 0x118F2, 133},	// Warang_Citi (Exclusion)
    {0x118FF, 0x118FF, 133},	// Warang_Citi (Exclusion)
    {0x11900, 0x11906, 48},	// Dives_Akuru (Exclusion)
    {0x11909, 0x11909, 48},	// Dives_Akuru (Exclusion)
    {0x1190C, 0x11913, 48},	// Dives_Akuru (Exclusion)
    {0x11915, 0x11916, 48},	// Dives_Akuru (Exclusion)
    {0x11918, 0x11935, 48},	// Dives_Akuru (Exclusion)
    {0x11937, 0x11938, 48},	// Dives_Akuru (Exclusion)
    {0x1193B, 0x11946, 48},	// Dives_Akuru (Exclusion)
    {0x11950, 0x11959, 48},	// Dives_Akuru (Exclusion)
    {0x119A0, 0x119A7, 91},	// Nandinagari (Exclusion)
    {0x119AA, 0x119D7, 91},	// Nandinagari (Exclusion)
    {0x119DA, 0x119E4, 91},	// Nandinagari (Exclusion)
    {0x11A00, 0x11A47, 135},	// Zanabazar_Square (Exclusion)
    {0x11A50, 0x11AA2, 120},	// Soyombo (Exclusion)
    {0x11AB0, 0x11ABF, 140},	// Canadian_Aboriginal (Limited_Use)
    {0x11AC0, 0x11AF8, 107},	// Pau_Cin_Hau (Exclusion)
    {0x11B00, 0x11B09, 8},	// Devanagari (Not_XID)
    {0x11BC0, 0x11BE1, 121},	// Sunuwar (Exclusion)
    {0x11BF0, 0x11BF9, 121},	// Sunuwar (Exclusion)
    {0x11C00, 0x11C08, 35},	// Bhaiksuki (Exclusion)
    {0x11C0A, 0x11C36, 35},	// Bhaiksuki (Exclusion)
    {0x11C38, 0x11C45, 35},	// Bhaiksuki (Exclusion)
    {0x11C50, 0x11C6C, 35},	// Bhaiksuki (Exclusion)
    {0x11C70, 0x11C8F, 79},	// Marchen (Exclusion Not_XID)
    {0x11C92, 0x11CA7, 79},	// Marchen (Exclusion)
    {0x11CA9, 0x11CB6, 79},	// Marchen (Exclusion)
    {0x11D00, 0x11D06, 80},	// Masaram_Gondi (Exclusion)
    {0x11D08, 0x11D09, 80},	// Masaram_Gondi (Exclusion)
    {0x11D0B, 0x11D36, 80},	// Masaram_Gondi (Exclusion)
    {0x11D3A, 0x11D3A, 80},	// Masaram_Gondi (Exclusion)
    {0x11D3C, 0x11D3D, 80},	// Masaram_Gondi (Exclusion)
    {0x11D3F, 0x11D47, 80},	// Masaram_Gondi (Exclusion)
    {0x11D50, 0x11D59, 80},	// Masaram_Gondi (Exclusion)
    {0x11D60, 0x11D65, 58},	// Gunjala_Gondi (Limited_Use)
    {0x11D67, 0x11D68, 58},	// Gunjala_Gondi (Limited_Use)
    {0x11D6A, 0x11D8E, 58},	// Gunjala_Gondi (Limited_Use)
    {0x11D90, 0x11D91, 58},	// Gunjala_Gondi (Limited_Use)
    {0x11D93, 0x11D98, 58},	// Gunjala_Gondi (Limited_Use)
    {0x11DA0, 0x11DA9, 58},	// Gunjala_Gondi (Limited_Use)
    {0x11EE0, 0x11EF8, 77},	// Makasar (Exclusion)
    {0x11F00, 0x11F10, 66},	// Kawi (Exclusion)
    {0x11F12, 0x11F3A, 66},	// Kawi (Exclusion)
    {0x11F3E, 0x11F5A, 66},	// Kawi (Exclusion)
    {0x11FB0, 0x11FB0, 149},	// Lisu (Limited_Use)
    {0x11FC0, 0x11FF1, 26},	// Tamil (Not_XID)
    {0x11FFF, 0x11FFF, 26},	// Tamil (Not_XID)
    {0x12000, 0x12399, 44},	// Cuneiform (Exclusion)
    {0x12400, 0x1246E, 44},	// Cuneiform (Exclusion)
    {0x12470, 0x12474, 44},	// Cuneiform (Exclusion Not_XID)
    {0x12480, 0x12543, 44},	// Cuneiform (Exclusion)
    {0x12F90, 0x12FF2, 46},	// Cypro_Minoan (Exclusion)
    {0x13000, 0x13455, 51},	// Egyptian_Hieroglyphs (Exclusion)
    {0x13460, 0x143FA, 51},	// Egyptian_Hieroglyphs (Exclusion)
    {0x14400, 0x14646, 32},	// Anatolian_Hieroglyphs (Exclusion)
    {0x16100, 0x16139, 59},	// Gurung_Khema (Exclusion)
    {0x16800, 0x16A38, 138},	// Bamum (Limited_Use)
    {0x16A40, 0x16A5E, 87},	// Mro (Uncommon_Use Exclusion)
    {0x16A60, 0x16A69, 87},	// Mro (Uncommon_Use Exclusion)
    {0x16A6E, 0x16A6F, 87},	// Mro (Exclusion Not_XID)
    {0x16A70, 0x16ABE, 125},	// Tangsa (Exclusion)
    {0x16AC0, 0x16AC9, 125},	// Tangsa (Exclusion)
    {0x16AD0, 0x16AED, 34},	// Bassa_Vah (Exclusion)
    {0x16AF0, 0x16AF5, 34},	// Bassa_Vah (Exclusion)
    {0x16B00, 0x16B45, 105},	// Pahawh_Hmong (Exclusion)
    {0x16B50, 0x16B59, 105},	// Pahawh_Hmong (Exclusion)
    {0x16B5B, 0x16B61, 105},	// Pahawh_Hmong (Exclusion Not_XID)
    {0x16B63, 0x16B77, 105},	// Pahawh_Hmong (Exclusion)
    {0x16B7D, 0x16B8F, 105},	// Pahawh_Hmong (Exclusion)
    {0x16D40, 0x16D79, 71},	// Kirat_Rai (Exclusion)
    {0x16E40, 0x16E9A, 81},	// Medefaidrin (Exclusion)
    {0x16F00, 0x16F4A, 152},	// Miao (Limited_Use)
    {0x16F4F, 0x16F87, 152},	// Miao (Limited_Use)
    {0x16F8F, 0x16F9F, 152},	// Miao (Limited_Use)
    {0x16FE0, 0x16FE0, 126},	// Tangut (Exclusion)
    {0x16FE1, 0x16FE1, 92},	// Nushu (Exclusion)
    {0x16FE2, 0x16FE3, 15},	// Han (Not_XID)
    {0x16FE4, 0x16FE4, 68},	// Khitan_Small_Script (Exclusion)
    {0x16FF0, 0x16FF1, 15},	// Han
    {0x17000, 0x187F7, 126},	// Tangut (Exclusion)
    {0x18800, 0x18AFF, 126},	// Tangut (Exclusion)
    {0x18B00, 0x18CD5, 68},	// Khitan_Small_Script (Exclusion)
    {0x18CFF, 0x18CFF, 68},	// Khitan_Small_Script (Exclusion)
    {0x18D00, 0x18D08, 126},	// Tangut (Exclusion)
    {0x1AFF0, 0x1AFF3, 18},	// Katakana (Uncommon_Use)
    {0x1AFF5, 0x1AFFB, 18},	// Katakana (Uncommon_Use)
    {0x1AFFD, 0x1AFFE, 18},	// Katakana (Uncommon_Use)
    {0x1B000, 0x1B000, 18},	// Katakana (Obsolete)
    {0x1B001, 0x1B11F, 17},	// Hiragana (Obsolete)
    {0x1B120, 0x1B122, 18},	// Katakana
    {0x1B132, 0x1B132, 17},	// Hiragana
    {0x1B150, 0x1B152, 17},	// Hiragana
    {0x1B155, 0x1B155, 18},	// Katakana
    {0x1B164, 0x1B167, 18},	// Katakana
    {0x1B170, 0x1B2FB, 92},	// Nushu (Exclusion)
    {0x1BC00, 0x1BC6A, 50},	// Duployan (Exclusion)
    {0x1BC70, 0x1BC7C, 50},	// Duployan (Exclusion)
    {0x1BC80, 0x1BC88, 50},	// Duployan (Exclusion)
    {0x1BC90, 0x1BC99, 50},	// Duployan (Exclusion)
    {0x1BC9C, 0x1BC9F, 50},	// Duployan (Exclusion Not_XID)
    {0x1BCA0, 0x1BCA3, 0},	// Common (Default_Ignorable)
    {0x1CC00, 0x1CCF9, 0},	// Common (Not_XID)
    {0x1CD00, 0x1CEB3, 0},	// Common (Not_XID)
    {0x1CF00, 0x1CF2D, 1},	// Inherited
    {0x1CF30, 0x1CF46, 1},	// Inherited
    {0x1CF50, 0x1CFC3, 0},	// Common (Technical Not_XID)
    {0x1D000, 0x1D0F5, 0},	// Common (Technical Not_XID)
    {0x1D100, 0x1D126, 0},	// Common (Technical Not_XID)
    {0x1D129, 0x1D166, 0},	// Common (Technical Not_XID)
    {0x1D167, 0x1D169, 1},	// Inherited
    {0x1D16A, 0x1D17A, 0},	// Common (Technical Not_XID)
    {0x1D17B, 0x1D182, 1},	// Inherited
    {0x1D183, 0x1D184, 0},	// Common (Technical Not_XID)
    {0x1D185, 0x1D18B, 1},	// Inherited
    {0x1D18C, 0x1D1A9, 0},	// Common (Technical Not_XID)
    {0x1D1AA, 0x1D1AD, 1},	// Inherited
    {0x1D1AE, 0x1D1EA, 0},	// Common (Technical Not_XID)
    {0x1D200, 0x1D245, 11},	// Greek (Obsolete Not_XID)
    {0x1D2C0, 0x1D2D3, 0},	// Common (Not_XID)
    {0x1D2E0, 0x1D2F3, 0},	// Common (Not_XID)
    {0x1D300, 0x1D356, 0},	// Common (Technical Not_XID)
    {0x1D360, 0x1D378, 0},	// Common (Not_XID)
    {0x1D400, 0x1D454, 0},	// Common (Not_NFKC)
    {0x1D456, 0x1D49C, 0},	// Common (Not_NFKC)
    {0x1D49E, 0x1D49F, 0},	// Common (Not_NFKC)
    {0x1D4A2, 0x1D4A2, 0},	// Common (Not_NFKC)
    {0x1D4A5, 0x1D4A6, 0},	// Common (Not_NFKC)
    {0x1D4A9, 0x1D4AC, 0},	// Common (Not_NFKC)
    {0x1D4AE, 0x1D4B9, 0},	// Common (Not_NFKC)
    {0x1D4BB, 0x1D4BB, 0},	// Common (Not_NFKC)
    {0x1D4BD, 0x1D4C3, 0},	// Common (Not_NFKC)
    {0x1D4C5, 0x1D505, 0},	// Common (Not_NFKC)
    {0x1D507, 0x1D50A, 0},	// Common (Not_NFKC)
    {0x1D50D, 0x1D514, 0},	// Common (Not_NFKC)
    {0x1D516, 0x1D51C, 0},	// Common (Not_NFKC)
    {0x1D51E, 0x1D539, 0},	// Common (Not_NFKC)
    {0x1D53B, 0x1D53E, 0},	// Common (Not_NFKC)
    {0x1D540, 0x1D544, 0},	// Common (Not_NFKC)
    {0x1D546, 0x1D546, 0},	// Common (Not_NFKC)
    {0x1D54A, 0x1D550, 0},	// Common (Not_NFKC)
    {0x1D552, 0x1D6A5, 0},	// Common (Not_NFKC)
    {0x1D6A8, 0x1D7CB, 0},	// Common (Not_NFKC)
    {0x1D7CE, 0x1D7FF, 0},	// Common (Not_NFKC)
    {0x1D800, 0x1DA8B, 117},	// SignWriting (Exclusion Not_XID)
    {0x1DA9B, 0x1DA9F, 117},	// SignWriting (Exclusion)
    {0x1DAA1, 0x1DAAF, 117},	// SignWriting (Exclusion)
    {0x1DF00, 0x1DF1E, 2},	// Latin
    {0x1DF25, 0x1DF2A, 2},	// Latin
    {0x1E000, 0x1E006, 55},	// Glagolitic (Exclusion)
    {0x1E008, 0x1E018, 55},	// Glagolitic (Exclusion)
    {0x1E01B, 0x1E021, 55},	// Glagolitic (Exclusion)
    {0x1E023, 0x1E024, 55},	// Glagolitic (Exclusion)
    {0x1E026, 0x1E02A, 55},	// Glagolitic (Exclusion)
    {0x1E030, 0x1E06D, 7},	// Cyrillic (Not_NFKC)
    {0x1E08F, 0x1E08F, 7},	// Cyrillic
    {0x1E100, 0x1E12C, 156},	// Nyiakeng_Puachue_Hmong (Limited_Use)
    {0x1E130, 0x1E13D, 156},	// Nyiakeng_Puachue_Hmong (Limited_Use)
    {0x1E140, 0x1E149, 156},	// Nyiakeng_Puachue_Hmong (Limited_Use)
    {0x1E14E, 0x1E14F, 156},	// Nyiakeng_Puachue_Hmong (Limited_Use)
    {0x1E290, 0x1E2AE, 129},	// Toto (Exclusion)
    {0x1E2C0, 0x1E2F9, 168},	// Wancho (Limited_Use)
    {0x1E2FF, 0x1E2FF, 168},	// Wancho (Limited_Use Not_XID)
    {0x1E4D0, 0x1E4F9, 90},	// Nag_Mundari (Exclusion)
    {0x1E5D0, 0x1E5FA, 94},	// Ol_Onal (Exclusion)
    {0x1E5FF, 0x1E5FF, 94},	// Ol_Onal (Exclusion Not_XID)
    {0x1E7E0, 0x1E7E6, 9},	// Ethiopic
    {0x1E7E8, 0x1E7EB, 9},	// Ethiopic
    {0x1E7ED, 0x1E7EE, 9},	// Ethiopic
    {0x1E7F0, 0x1E7FE, 9},	// Ethiopic
    {0x1E800, 0x1E8C4, 82},	// Mende_Kikakui (Exclusion)
    {0x1E8C7, 0x1E8D6, 82},	// Mende_Kikakui (Exclusion Not_XID)
    {0x1E900, 0x1E94B, 136},	// Adlam (Limited_Use)
    {0x1E950, 0x1E959, 136},	// Adlam (Limited_Use)
    {0x1E95E, 0x1E95F, 136},	// Adlam (Limited_Use Not_XID)
    {0x1EC71, 0x1ECB4, 0},	// Common (Not_XID)
    {0x1ED01, 0x1ED3D, 0},	// Common (Not_XID)
    {0x1EE00, 0x1EE03, 3},	// Arabic (Not_NFKC)
    {0x1EE05, 0x1EE1F, 3},	// Arabic (Not_NFKC)
    {0x1EE21, 0x1EE22, 3},	// Arabic (Not_NFKC)
    {0x1EE24, 0x1EE24, 3},	// Arabic (Not_NFKC)
    {0x1EE27, 0x1EE27, 3},	// Arabic (Not_NFKC)
    {0x1EE29, 0x1EE32, 3},	// Arabic (Not_NFKC)
    {0x1EE34, 0x1EE37, 3},	// Arabic (Not_NFKC)
    {0x1EE39, 0x1EE39, 3},	// Arabic (Not_NFKC)
    {0x1EE3B, 0x1EE3B, 3},	// Arabic (Not_NFKC)
    {0x1EE42, 0x1EE42, 3},	// Arabic (Not_NFKC)
    {0x1EE47, 0x1EE47, 3},	// Arabic (Not_NFKC)
    {0x1EE49, 0x1EE49, 3},	// Arabic (Not_NFKC)
    {0x1EE4B, 0x1EE4B, 3},	// Arabic (Not_NFKC)
    {0x1EE4D, 0x1EE4F, 3},	// Arabic (Not_NFKC)
    {0x1EE51, 0x1EE52, 3},	// Arabic (Not_NFKC)
    {0x1EE54, 0x1EE54, 3},	// Arabic (Not_NFKC)
    {0x1EE57, 0x1EE57, 3},	// Arabic (Not_NFKC)
    {0x1EE59, 0x1EE59, 3},	// Arabic (Not_NFKC)
    {0x1EE5B, 0x1EE5B, 3},	// Arabic (Not_NFKC)
    {0x1EE5D, 0x1EE5D, 3},	// Arabic (Not_NFKC)
    {0x1EE5F, 0x1EE5F, 3},	// Arabic (Not_NFKC)
    {0x1EE61, 0x1EE62, 3},	// Arabic (Not_NFKC)
    {0x1EE64, 0x1EE64, 3},	// Arabic (Not_NFKC)
    {0x1EE67, 0x1EE6A, 3},	// Arabic (Not_NFKC)
    {0x1EE6C, 0x1EE72, 3},	// Arabic (Not_NFKC)
    {0x1EE74, 0x1EE77, 3},	// Arabic (Not_NFKC)
    {0x1EE79, 0x1EE7C, 3},	// Arabic (Not_NFKC)
    {0x1EE7E, 0x1EE7E, 3},	// Arabic (Not_NFKC)
    {0x1EE80, 0x1EE89, 3},	// Arabic (Not_NFKC)
    {0x1EE8B, 0x1EE9B, 3},	// Arabic (Not_NFKC)
    {0x1EEA1, 0x1EEA3, 3},	// Arabic (Not_NFKC)
    {0x1EEA5, 0x1EEA9, 3},	// Arabic (Not_NFKC)
    {0x1EEAB, 0x1EEBB, 3},	// Arabic (Not_NFKC)
    {0x1EEF0, 0x1EEF1, 3},	// Arabic (Not_XID)
    {0x1F000, 0x1F02B, 0},	// Common (Not_XID)
    {0x1F030, 0x1F093, 0},	// Common (Not_XID)
    {0x1F0A0, 0x1F0AE, 0},	// Common (Not_XID)
    {0x1F0B1, 0x1F0BF, 0},	// Common (Not_XID)
    {0x1F0C1, 0x1F0CF, 0},	// Common (Not_XID)
    {0x1F0D1, 0x1F0F5, 0},	// Common (Not_XID)
    {0x1F100, 0x1F1AD, 0},	// Common (Not_NFKC)
    {0x1F1E6, 0x1F1FF, 0},	// Common (Not_XID)
    {0x1F200, 0x1F200, 17},	// Hiragana (Not_NFKC)
    {0x1F201, 0x1F202, 0},	// Common (Not_NFKC)
    {0x1F210, 0x1F23B, 0},	// Common (Not_NFKC)
    {0x1F240, 0x1F248, 0},	// Common (Not_NFKC)
    {0x1F250, 0x1F251, 0},	// Common (Not_NFKC)
    {0x1F260, 0x1F265, 0},	// Common (Not_XID)
    {0x1F300, 0x1F6D7, 0},	// Common (Not_XID)
    {0x1F6DC, 0x1F6EC, 0},	// Common (Not_XID)
    {0x1F6F0, 0x1F6FC, 0},	// Common (Not_XID)
    {0x1F700, 0x1F776, 0},	// Common (Not_XID)
    {0x1F77B, 0x1F7D9, 0},	// Common (Not_XID)
    {0x1F7E0, 0x1F7EB, 0},	// Common (Not_XID)
    {0x1F7F0, 0x1F7F0, 0},	// Common (Not_XID)
    {0x1F800, 0x1F80B, 0},	// Common (Not_XID)
    {0x1F810, 0x1F847, 0},	// Common (Not_XID)
    {0x1F850, 0x1F859, 0},	// Common (Not_XID)
    {0x1F860, 0x1F887, 0},	// Common (Not_XID)
    {0x1F890, 0x1F8AD, 0},	// Common (Not_XID)
    {0x1F8B0, 0x1F8BB, 0},	// Common (Not_XID)
    {0x1F8C0, 0x1F8C1, 0},	// Common (Not_XID)
    {0x1F900, 0x1FA53, 0},	// Common (Not_XID)
    {0x1FA60, 0x1FA6D, 0},	// Common (Not_XID)
    {0x1FA70, 0x1FA7C, 0},	// Common (Not_XID)
    {0x1FA80, 0x1FA89, 0},	// Common (Not_XID)
    {0x1FA8F, 0x1FAC6, 0},	// Common (Not_XID)
    {0x1FACE, 0x1FADC, 0},	// Common (Not_XID)
    {0x1FADF, 0x1FAE9, 0},	// Common (Not_XID)
    {0x1FAF0, 0x1FAF8, 0},	// Common (Not_XID)
    {0x1FB00, 0x1FB92, 0},	// Common (Not_XID)
    {0x1FB94, 0x1FBF9, 0},	// Common (Not_XID)
    {0x20000, 0x2A6DF, 15},	// Han
    {0x2A700, 0x2B739, 15},	// Han
    {0x2B740, 0x2B81D, 15},	// Han
    {0x2B820, 0x2CEA1, 15},	// Han
    {0x2CEB0, 0x2EBE0, 15},	// Han
    {0x2EBF0, 0x2EE5D, 15},	// Han
    {0x2F800, 0x2FA1D, 15},	// Han (Not_NFKC)
    {0x30000, 0x3134A, 15},	// Han
    {0x31350, 0x323AF, 15},	// Han
    {0xE0001, 0xE0001, 0},	// Common (Deprecated)
    {0xE0020, 0xE007F, 0},	// Common (Default_Ignorable)
    {0xE0100, 0xE01EF, 1},	// Inherited (Default_Ignorable)
    // clang-format on
}; // 381 ranges, 57 single codepoints
#  else
extern const struct sc xid_script_list32[438];
#  endif
#endif // DISABLE_CHECK_XID

#ifndef DISABLE_CHECK_XID
#  ifndef EXTERN_SCRIPTS
LOCAL const struct range_bool16 allowed_id_list16[] = {
    // clang-format off
    {0x0027, 0x0027},
    {0x002D, 0x002E},
    {0x0030, 0x003A},
    {0x0041, 0x005A},
    {0x005F, 0x005F},
    {0x0061, 0x007A},
    {0x00B7, 0x00B7},
    {0x00C0, 0x00D6},
    {0x00D8, 0x00F6},
    {0x00F8, 0x0131},
    {0x0134, 0x013E},
    {0x0141, 0x0148},
    {0x014A, 0x017E},
    {0x018F, 0x018F},
    {0x01A0, 0x01A1},
    {0x01AF, 0x01B0},
    {0x01CD, 0x01DC},
    {0x01DE, 0x01E3},
    {0x01E6, 0x01F0},
    {0x01F4, 0x01F5},
    {0x01F8, 0x021B},
    {0x021E, 0x021F},
    {0x0226, 0x0233},
    {0x0259, 0x0259},
    {0x02BB, 0x02BC},
    {0x02EC, 0x02EC},
    {0x0300, 0x0304},
    {0x0306, 0x030C},
    {0x030F, 0x0311},
    {0x0313, 0x0314},
    {0x031B, 0x031B},
    {0x0323, 0x0328},
    {0x032D, 0x032E},
    {0x0330, 0x0331},
    {0x0335, 0x0335},
    {0x0338, 0x0339},
    {0x0342, 0x0342},
    {0x0345, 0x0345},
    {0x0375, 0x0375},
    {0x037B, 0x037D},
    {0x0386, 0x0386},
    {0x0388, 0x038A},
    {0x038C, 0x038C},
    {0x038E, 0x03A1},
    {0x03A3, 0x03CE},
    {0x03FC, 0x045F},
    {0x048A, 0x04FF},
    {0x0510, 0x0529},
    {0x052E, 0x052F},
    {0x0531, 0x0556},
    {0x0559, 0x0559},
    {0x0561, 0x0586},
    {0x058A, 0x058A},
    {0x05B4, 0x05B4},
    {0x05D0, 0x05EA},
    {0x05EF, 0x05F4},
    {0x0620, 0x063F},
    {0x0641, 0x0655},
    {0x0660, 0x0669},
    {0x0670, 0x0672},
    {0x0674, 0x0674},
    {0x0679, 0x068D},
    {0x068F, 0x06A0},
    {0x06A2, 0x06D3},
    {0x06D5, 0x06D5},
    {0x06E5, 0x06E6},
    {0x06EE, 0x06FF},
    {0x0750, 0x07B1},
    {0x0870, 0x0887},
    {0x0889, 0x088E},
    {0x08A0, 0x08AC},
    {0x08B2, 0x08B2},
    {0x08B5, 0x08C9},
    {0x0901, 0x094D},
    {0x094F, 0x0950},
    {0x0956, 0x0957},
    {0x0960, 0x0963},
    {0x0966, 0x096F},
    {0x0971, 0x0977},
    {0x0979, 0x097F},
    {0x0981, 0x0983},
    {0x0985, 0x098C},
    {0x098F, 0x0990},
    {0x0993, 0x09A8},
    {0x09AA, 0x09B0},
    {0x09B2, 0x09B2},
    {0x09B6, 0x09B9},
    {0x09BC, 0x09C4},
    {0x09C7, 0x09C8},
    {0x09CB, 0x09CE},
    {0x09D7, 0x09D7},
    {0x09E0, 0x09E3},
    {0x09E6, 0x09F1},
    {0x09FE, 0x09FE},
    {0x0A01, 0x0A03},
    {0x0A05, 0x0A0A},
    {0x0A0F, 0x0A10},
    {0x0A13, 0x0A28},
    {0x0A2A, 0x0A30},
    {0x0A32, 0x0A32},
    {0x0A35, 0x0A35},
    {0x0A38, 0x0A39},
    {0x0A3C, 0x0A3C},
    {0x0A3E, 0x0A42},
    {0x0A47, 0x0A48},
    {0x0A4B, 0x0A4D},
    {0x0A5C, 0x0A5C},
    {0x0A66, 0x0A74},
    {0x0A81, 0x0A83},
    {0x0A85, 0x0A8D},
    {0x0A8F, 0x0A91},
    {0x0A93, 0x0AA8},
    {0x0AAA, 0x0AB0},
    {0x0AB2, 0x0AB3},
    {0x0AB5, 0x0AB9},
    {0x0ABC, 0x0AC5},
    {0x0AC7, 0x0AC9},
    {0x0ACB, 0x0ACD},
    {0x0AD0, 0x0AD0},
    {0x0AE0, 0x0AE3},
    {0x0AE6, 0x0AEF},
    {0x0AFA, 0x0AFF},
    {0x0B01, 0x0B03},
    {0x0B05, 0x0B0C},
    {0x0B0F, 0x0B10},
    {0x0B13, 0x0B28},
    {0x0B2A, 0x0B30},
    {0x0B32, 0x0B33},
    {0x0B35, 0x0B39},
    {0x0B3C, 0x0B43},
    {0x0B47, 0x0B48},
    {0x0B4B, 0x0B4D},
    {0x0B55, 0x0B57},
    {0x0B5F, 0x0B61},
    {0x0B66, 0x0B6F},
    {0x0B71, 0x0B71},
    {0x0B82, 0x0B83},
    {0x0B85, 0x0B8A},
    {0x0B8E, 0x0B90},
    {0x0B92, 0x0B95},
    {0x0B99, 0x0B9A},
    {0x0B9C, 0x0B9C},
    {0x0B9E, 0x0B9F},
    {0x0BA3, 0x0BA4},
    {0x0BA8, 0x0BAA},
    {0x0BAE, 0x0BB9},
    {0x0BBE, 0x0BC2},
    {0x0BC6, 0x0BC8},
    {0x0BCA, 0x0BCD},
    {0x0BD0, 0x0BD0},
    {0x0BD7, 0x0BD7},
    {0x0BE6, 0x0BEF},
    {0x0C01, 0x0C0C},
    {0x0C0E, 0x0C10},
    {0x0C12, 0x0C28},
    {0x0C2A, 0x0C33},
    {0x0C35, 0x0C39},
    {0x0C3C, 0x0C44},
    {0x0C46, 0x0C48},
    {0x0C4A, 0x0C4D},
    {0x0C55, 0x0C56},
    {0x0C5D, 0x0C5D},
    {0x0C60, 0x0C61},
    {0x0C66, 0x0C6F},
    {0x0C80, 0x0C80},
    {0x0C82, 0x0C83},
    {0x0C85, 0x0C8C},
    {0x0C8E, 0x0C90},
    {0x0C92, 0x0CA8},
    {0x0CAA, 0x0CB3},
    {0x0CB5, 0x0CB9},
    {0x0CBC, 0x0CC4},
    {0x0CC6, 0x0CC8},
    {0x0CCA, 0x0CCD},
    {0x0CD5, 0x0CD6},
    {0x0CDD, 0x0CDD},
    {0x0CE0, 0x0CE3},
    {0x0CE6, 0x0CEF},
    {0x0CF1, 0x0CF3},
    {0x0D00, 0x0D00},
    {0x0D02, 0x0D03},
    {0x0D05, 0x0D0C},
    {0x0D0E, 0x0D10},
    {0x0D12, 0x0D3A},
    {0x0D3D, 0x0D43},
    {0x0D46, 0x0D48},
    {0x0D4A, 0x0D4E},
    {0x0D54, 0x0D57},
    {0x0D60, 0x0D61},
    {0x0D66, 0x0D6F},
    {0x0D7A, 0x0D7F},
    {0x0D82, 0x0D83},
    {0x0D85, 0x0D8E},
    {0x0D91, 0x0D96},
    {0x0D9A, 0x0DA5},
    {0x0DA7, 0x0DB1},
    {0x0DB3, 0x0DBB},
    {0x0DBD, 0x0DBD},
    {0x0DC0, 0x0DC6},
    {0x0DCA, 0x0DCA},
    {0x0DCF, 0x0DD4},
    {0x0DD6, 0x0DD6},
    {0x0DD8, 0x0DDE},
    {0x0DF2, 0x0DF2},
    {0x0E01, 0x0E32},
    {0x0E34, 0x0E3A},
    {0x0E40, 0x0E4E},
    {0x0E50, 0x0E59},
    {0x0E81, 0x0E82},
    {0x0E84, 0x0E84},
    {0x0E86, 0x0E8A},
    {0x0E8C, 0x0EA3},
    {0x0EA5, 0x0EA5},
    {0x0EA7, 0x0EB2},
    {0x0EB4, 0x0EBD},
    {0x0EC0, 0x0EC4},
    {0x0EC6, 0x0EC6},
    {0x0EC8, 0x0ECE},
    {0x0ED0, 0x0ED9},
    {0x0EDE, 0x0EDF},
    {0x0F00, 0x0F00},
    {0x0F0B, 0x0F0B},
    {0x0F20, 0x0F29},
    {0x0F35, 0x0F35},
    {0x0F37, 0x0F37},
    {0x0F3E, 0x0F42},
    {0x0F44, 0x0F47},
    {0x0F49, 0x0F4C},
    {0x0F4E, 0x0F51},
    {0x0F53, 0x0F56},
    {0x0F58, 0x0F5B},
    {0x0F5D, 0x0F68},
    {0x0F6A, 0x0F6C},
    {0x0F71, 0x0F72},
    {0x0F74, 0x0F74},
    {0x0F7A, 0x0F80},
    {0x0F82, 0x0F84},
    {0x0F86, 0x0F92},
    {0x0F94, 0x0F97},
    {0x0F99, 0x0F9C},
    {0x0F9E, 0x0FA1},
    {0x0FA3, 0x0FA6},
    {0x0FA8, 0x0FAB},
    {0x0FAD, 0x0FB8},
    {0x0FBA, 0x0FBC},
    {0x0FC6, 0x0FC6},
    {0x1000, 0x1049},
    {0x1050, 0x109D},
    {0x10C7, 0x10C7},
    {0x10CD, 0x10CD},
    {0x10D0, 0x10F0},
    {0x10F7, 0x10FA},
    {0x10FD, 0x10FF},
    {0x1200, 0x1248},
    {0x124A, 0x124D},
    {0x1250, 0x1256},
    {0x1258, 0x1258},
    {0x125A, 0x125D},
    {0x1260, 0x1288},
    {0x128A, 0x128D},
    {0x1290, 0x12B0},
    {0x12B2, 0x12B5},
    {0x12B8, 0x12BE},
    {0x12C0, 0x12C0},
    {0x12C2, 0x12C5},
    {0x12C8, 0x12D6},
    {0x12D8, 0x1310},
    {0x1312, 0x1315},
    {0x1318, 0x135A},
    {0x135D, 0x135F},
    {0x1380, 0x138F},
    {0x1780, 0x17A2},
    {0x17A5, 0x17A7},
    {0x17A9, 0x17B3},
    {0x17B6, 0x17CD},
    {0x17D0, 0x17D0},
    {0x17D2, 0x17D2},
    {0x17D7, 0x17D7},
    {0x17DC, 0x17DC},
    {0x17E0, 0x17E9},
    {0x1C90, 0x1CBA},
    {0x1CBD, 0x1CBF},
    {0x1E00, 0x1E99},
    {0x1E9E, 0x1E9E},
    {0x1EA0, 0x1EF9},
    {0x1F00, 0x1F15},
    {0x1F18, 0x1F1D},
    {0x1F20, 0x1F45},
    {0x1F48, 0x1F4D},
    {0x1F50, 0x1F57},
    {0x1F59, 0x1F59},
    {0x1F5B, 0x1F5B},
    {0x1F5D, 0x1F5D},
    {0x1F5F, 0x1F70},
    {0x1F72, 0x1F72},
    {0x1F74, 0x1F74},
    {0x1F76, 0x1F76},
    {0x1F78, 0x1F78},
    {0x1F7A, 0x1F7A},
    {0x1F7C, 0x1F7C},
    {0x1F80, 0x1FB4},
    {0x1FB6, 0x1FBA},
    {0x1FBC, 0x1FBC},
    {0x1FC2, 0x1FC4},
    {0x1FC6, 0x1FC8},
    {0x1FCA, 0x1FCA},
    {0x1FCC, 0x1FCC},
    {0x1FD0, 0x1FD2},
    {0x1FD6, 0x1FDA},
    {0x1FE0, 0x1FE2},
    {0x1FE4, 0x1FEA},
    {0x1FEC, 0x1FEC},
    {0x1FF2, 0x1FF4},
    {0x1FF6, 0x1FF8},
    {0x1FFA, 0x1FFA},
    {0x1FFC, 0x1FFC},
    {0x2010, 0x2010},
    {0x2019, 0x2019},
    {0x2027, 0x2027},
    {0x2D27, 0x2D27},
    {0x2D2D, 0x2D2D},
    {0x2D80, 0x2D96},
    {0x2DA0, 0x2DA6},
    {0x2DA8, 0x2DAE},
    {0x2DB0, 0x2DB6},
    {0x2DB8, 0x2DBE},
    {0x2DC0, 0x2DC6},
    {0x2DC8, 0x2DCE},
    {0x2DD0, 0x2DD6},
    {0x2DD8, 0x2DDE},
    {0x3005, 0x3007},
    {0x3041, 0x3096},
    {0x3099, 0x309A},
    {0x309D, 0x309E},
    {0x30A0, 0x30FE},
    {0x3105, 0x312D},
    {0x312F, 0x312F},
    {0x31A0, 0x31BF},
    {0x3400, 0x4DBF},
    {0x4E00, 0x9FFF},
    {0xA67F, 0xA67F},
    {0xA717, 0xA71F},
    {0xA788, 0xA788},
    {0xA78D, 0xA78D},
    {0xA792, 0xA793},
    {0xA7AA, 0xA7AA},
    {0xA7C0, 0xA7CA},
    {0xA7D0, 0xA7D1},
    {0xA7D3, 0xA7D3},
    {0xA7D5, 0xA7D9},
    {0xA9E7, 0xA9FE},
    {0xAA60, 0xAA76},
    {0xAA7A, 0xAA7F},
    {0xAB01, 0xAB06},
    {0xAB09, 0xAB0E},
    {0xAB11, 0xAB16},
    {0xAB20, 0xAB26},
    {0xAB28, 0xAB2E},
    {0xAB66, 0xAB67},
    {0xAC00, 0xD7A3},
    {0xFA0E, 0xFA0F},
    {0xFA11, 0xFA11},
    {0xFA13, 0xFA14},
    {0xFA1F, 0xFA1F},
    {0xFA21, 0xFA21},
    {0xFA23, 0xFA24},
    {0xFA27, 0xFA29},
    // clang-format on
}; // 281 ranges, 86 single codepoints
#  else
extern const struct range_bool16 allowed_id_list16[367];
#  endif

#  ifndef EXTERN_SCRIPTS
LOCAL const struct range_bool allowed_id_list32[] = {
    // clang-format off
    {0x11301, 0x11301},
    {0x11303, 0x11303},
    {0x1133B, 0x1133C},
    {0x16FF0, 0x16FF1},
    {0x1B11F, 0x1B122},
    {0x1B132, 0x1B132},
    {0x1B150, 0x1B152},
    {0x1B155, 0x1B155},
    {0x1B164, 0x1B167},
    {0x1DF00, 0x1DF1E},
    {0x1DF25, 0x1DF2A},
    {0x1E08F, 0x1E08F},
    {0x1E7E0, 0x1E7E6},
    {0x1E7E8, 0x1E7EB},
    {0x1E7ED, 0x1E7EE},
    {0x1E7F0, 0x1E7FE},
    {0x20000, 0x2A6DF},
    {0x2A700, 0x2B739},
    {0x2B740, 0x2B81D},
    {0x2B820, 0x2CEA1},
    {0x2CEB0, 0x2EBE0},
    {0x2EBF0, 0x2EE5D},
    {0x30000, 0x3134A},
    {0x31350, 0x323AF},
    // clang-format on
}; // 19 ranges, 5 single codepoints
#  else
extern const struct range_bool allowed_id_list32[24];
#  endif
#endif

// CROARING uses different lists
#if !defined USE_NORM_CROAR || defined PERF_TEST

// NFD_Quick_Check=No
#  if !defined U8ID_NORM || U8ID_NORM == NFD
#    ifndef EXTERN_SCRIPTS
LOCAL const struct range_bool16 NFD_N_list16[] = {
    // clang-format off
    {0x00C0, 0x00C5},
    {0x00C7, 0x00CF},
    {0x00D1, 0x00D6},
    {0x00D9, 0x00DD},
    {0x00E0, 0x00E5},
    {0x00E7, 0x00EF},
    {0x00F1, 0x00F6},
    {0x00F9, 0x00FD},
    {0x00FF, 0x010F},
    {0x0112, 0x0125},
    {0x0128, 0x0130},
    {0x0134, 0x0137},
    {0x0139, 0x013E},
    {0x0143, 0x0148},
    {0x014C, 0x0151},
    {0x0154, 0x0165},
    {0x0168, 0x017E},
    {0x01A0, 0x01A1},
    {0x01AF, 0x01B0},
    {0x01CD, 0x01DC},
    {0x01DE, 0x01E3},
    {0x01E6, 0x01F0},
    {0x01F4, 0x01F5},
    {0x01F8, 0x021B},
    {0x021E, 0x021F},
    {0x0226, 0x0233},
    {0x0340, 0x0341},
    {0x0343, 0x0344},
    {0x0374, 0x0374},
    {0x037E, 0x037E},
    {0x0385, 0x0385},
    {0x0386, 0x0386},
    {0x0387, 0x0387},
    {0x0388, 0x038A},
    {0x038C, 0x038C},
    {0x038E, 0x0390},
    {0x03AA, 0x03B0},
    {0x03CA, 0x03CE},
    {0x03D3, 0x03D4},
    {0x0400, 0x0401},
    {0x0403, 0x0403},
    {0x0407, 0x0407},
    {0x040C, 0x040E},
    {0x0419, 0x0419},
    {0x0439, 0x0439},
    {0x0450, 0x0451},
    {0x0453, 0x0453},
    {0x0457, 0x0457},
    {0x045C, 0x045E},
    {0x0476, 0x0477},
    {0x04C1, 0x04C2},
    {0x04D0, 0x04D3},
    {0x04D6, 0x04D7},
    {0x04DA, 0x04DF},
    {0x04E2, 0x04E7},
    {0x04EA, 0x04F5},
    {0x04F8, 0x04F9},
    {0x0622, 0x0626},
    {0x06C0, 0x06C0},
    {0x06C2, 0x06C2},
    {0x06D3, 0x06D3},
    {0x0929, 0x0929},
    {0x0931, 0x0931},
    {0x0934, 0x0934},
    {0x0958, 0x095F},
    {0x09CB, 0x09CC},
    {0x09DC, 0x09DD},
    {0x09DF, 0x09DF},
    {0x0A33, 0x0A33},
    {0x0A36, 0x0A36},
    {0x0A59, 0x0A5B},
    {0x0A5E, 0x0A5E},
    {0x0B48, 0x0B48},
    {0x0B4B, 0x0B4C},
    {0x0B5C, 0x0B5D},
    {0x0B94, 0x0B94},
    {0x0BCA, 0x0BCC},
    {0x0C48, 0x0C48},
    {0x0CC0, 0x0CC0},
    {0x0CC7, 0x0CC8},
    {0x0CCA, 0x0CCB},
    {0x0D4A, 0x0D4C},
    {0x0DDA, 0x0DDA},
    {0x0DDC, 0x0DDE},
    {0x0F43, 0x0F43},
    {0x0F4D, 0x0F4D},
    {0x0F52, 0x0F52},
    {0x0F57, 0x0F57},
    {0x0F5C, 0x0F5C},
    {0x0F69, 0x0F69},
    {0x0F73, 0x0F73},
    {0x0F75, 0x0F76},
    {0x0F78, 0x0F78},
    {0x0F81, 0x0F81},
    {0x0F93, 0x0F93},
    {0x0F9D, 0x0F9D},
    {0x0FA2, 0x0FA2},
    {0x0FA7, 0x0FA7},
    {0x0FAC, 0x0FAC},
    {0x0FB9, 0x0FB9},
    {0x1026, 0x1026},
    {0x1B06, 0x1B06},
    {0x1B08, 0x1B08},
    {0x1B0A, 0x1B0A},
    {0x1B0C, 0x1B0C},
    {0x1B0E, 0x1B0E},
    {0x1B12, 0x1B12},
    {0x1B3B, 0x1B3B},
    {0x1B3D, 0x1B3D},
    {0x1B40, 0x1B41},
    {0x1B43, 0x1B43},
    {0x1E00, 0x1E99},
    {0x1E9B, 0x1E9B},
    {0x1EA0, 0x1EF9},
    {0x1F00, 0x1F15},
    {0x1F18, 0x1F1D},
    {0x1F20, 0x1F45},
    {0x1F48, 0x1F4D},
    {0x1F50, 0x1F57},
    {0x1F59, 0x1F59},
    {0x1F5B, 0x1F5B},
    {0x1F5D, 0x1F5D},
    {0x1F5F, 0x1F7D},
    {0x1F80, 0x1FB4},
    {0x1FB6, 0x1FBC},
    {0x1FBE, 0x1FBE},
    {0x1FC1, 0x1FC1},
    {0x1FC2, 0x1FC4},
    {0x1FC6, 0x1FCC},
    {0x1FCD, 0x1FCF},
    {0x1FD0, 0x1FD3},
    {0x1FD6, 0x1FDB},
    {0x1FDD, 0x1FDF},
    {0x1FE0, 0x1FEC},
    {0x1FED, 0x1FEF},
    {0x1FF2, 0x1FF4},
    {0x1FF6, 0x1FFC},
    {0x1FFD, 0x1FFD},
    {0x2000, 0x2001},
    {0x2126, 0x2126},
    {0x212A, 0x212B},
    {0x219A, 0x219B},
    {0x21AE, 0x21AE},
    {0x21CD, 0x21CD},
    {0x21CE, 0x21CF},
    {0x2204, 0x2204},
    {0x2209, 0x2209},
    {0x220C, 0x220C},
    {0x2224, 0x2224},
    {0x2226, 0x2226},
    {0x2241, 0x2241},
    {0x2244, 0x2244},
    {0x2247, 0x2247},
    {0x2249, 0x2249},
    {0x2260, 0x2260},
    {0x2262, 0x2262},
    {0x226D, 0x2271},
    {0x2274, 0x2275},
    {0x2278, 0x2279},
    {0x2280, 0x2281},
    {0x2284, 0x2285},
    {0x2288, 0x2289},
    {0x22AC, 0x22AF},
    {0x22E0, 0x22E3},
    {0x22EA, 0x22ED},
    {0x2329, 0x2329},
    {0x232A, 0x232A},
    {0x2ADC, 0x2ADC},
    {0x304C, 0x304C},
    {0x304E, 0x304E},
    {0x3050, 0x3050},
    {0x3052, 0x3052},
    {0x3054, 0x3054},
    {0x3056, 0x3056},
    {0x3058, 0x3058},
    {0x305A, 0x305A},
    {0x305C, 0x305C},
    {0x305E, 0x305E},
    {0x3060, 0x3060},
    {0x3062, 0x3062},
    {0x3065, 0x3065},
    {0x3067, 0x3067},
    {0x3069, 0x3069},
    {0x3070, 0x3071},
    {0x3073, 0x3074},
    {0x3076, 0x3077},
    {0x3079, 0x307A},
    {0x307C, 0x307D},
    {0x3094, 0x3094},
    {0x309E, 0x309E},
    {0x30AC, 0x30AC},
    {0x30AE, 0x30AE},
    {0x30B0, 0x30B0},
    {0x30B2, 0x30B2},
    {0x30B4, 0x30B4},
    {0x30B6, 0x30B6},
    {0x30B8, 0x30B8},
    {0x30BA, 0x30BA},
    {0x30BC, 0x30BC},
    {0x30BE, 0x30BE},
    {0x30C0, 0x30C0},
    {0x30C2, 0x30C2},
    {0x30C5, 0x30C5},
    {0x30C7, 0x30C7},
    {0x30C9, 0x30C9},
    {0x30D0, 0x30D1},
    {0x30D3, 0x30D4},
    {0x30D6, 0x30D7},
    {0x30D9, 0x30DA},
    {0x30DC, 0x30DD},
    {0x30F4, 0x30F4},
    {0x30F7, 0x30FA},
    {0x30FE, 0x30FE},
    {0xAC00, 0xD7A3},
    {0xF900, 0xFA0D},
    {0xFA10, 0xFA10},
    {0xFA12, 0xFA12},
    {0xFA15, 0xFA1E},
    {0xFA20, 0xFA20},
    {0xFA22, 0xFA22},
    {0xFA25, 0xFA26},
    {0xFA2A, 0xFA6D},
    {0xFA70, 0xFAD9},
    {0xFB1D, 0xFB1D},
    {0xFB1F, 0xFB1F},
    {0xFB2A, 0xFB36},
    {0xFB38, 0xFB3C},
    {0xFB3E, 0xFB3E},
    {0xFB40, 0xFB41},
    {0xFB43, 0xFB44},
    {0xFB46, 0xFB4E},
    // clang-format on
}; // 114 ranges, 117 single codepoints
#    else
extern const struct range_bool16 NFD_N_list16[231];
#    endif

#    ifndef EXTERN_SCRIPTS
LOCAL const struct range_bool NFD_N_list32[] = {
    // clang-format off
    {0x105C9, 0x105C9},
    {0x105E4, 0x105E4},
    {0x1109A, 0x1109A},
    {0x1109C, 0x1109C},
    {0x110AB, 0x110AB},
    {0x1112E, 0x1112F},
    {0x1134B, 0x1134C},
    {0x11383, 0x11383},
    {0x11385, 0x11385},
    {0x1138E, 0x1138E},
    {0x11391, 0x11391},
    {0x113C5, 0x113C5},
    {0x113C7, 0x113C8},
    {0x114BB, 0x114BC},
    {0x114BE, 0x114BE},
    {0x115BA, 0x115BB},
    {0x11938, 0x11938},
    {0x16121, 0x16128},
    {0x16D68, 0x16D6A},
    {0x1D15E, 0x1D164},
    {0x1D1BB, 0x1D1C0},
    {0x2F800, 0x2FA1D},
    // clang-format on
}; // 10 ranges, 12 single codepoints
#    else
extern const struct range_bool NFD_N_list32[22];
#    endif
#  endif

// NFC_Quick_Check=No
#  if !defined U8ID_NORM || U8ID_NORM == NFC
#    ifndef EXTERN_SCRIPTS
LOCAL const struct range_bool16 NFC_N_list16[] = {
    // clang-format off
    {0x0340, 0x0341},
    {0x0343, 0x0344},
    {0x0374, 0x0374},
    {0x037E, 0x037E},
    {0x0387, 0x0387},
    {0x0958, 0x095F},
    {0x09DC, 0x09DD},
    {0x09DF, 0x09DF},
    {0x0A33, 0x0A33},
    {0x0A36, 0x0A36},
    {0x0A59, 0x0A5B},
    {0x0A5E, 0x0A5E},
    {0x0B5C, 0x0B5D},
    {0x0F43, 0x0F43},
    {0x0F4D, 0x0F4D},
    {0x0F52, 0x0F52},
    {0x0F57, 0x0F57},
    {0x0F5C, 0x0F5C},
    {0x0F69, 0x0F69},
    {0x0F73, 0x0F73},
    {0x0F75, 0x0F76},
    {0x0F78, 0x0F78},
    {0x0F81, 0x0F81},
    {0x0F93, 0x0F93},
    {0x0F9D, 0x0F9D},
    {0x0FA2, 0x0FA2},
    {0x0FA7, 0x0FA7},
    {0x0FAC, 0x0FAC},
    {0x0FB9, 0x0FB9},
    {0x1F71, 0x1F71},
    {0x1F73, 0x1F73},
    {0x1F75, 0x1F75},
    {0x1F77, 0x1F77},
    {0x1F79, 0x1F79},
    {0x1F7B, 0x1F7B},
    {0x1F7D, 0x1F7D},
    {0x1FBB, 0x1FBB},
    {0x1FBE, 0x1FBE},
    {0x1FC9, 0x1FC9},
    {0x1FCB, 0x1FCB},
    {0x1FD3, 0x1FD3},
    {0x1FDB, 0x1FDB},
    {0x1FE3, 0x1FE3},
    {0x1FEB, 0x1FEB},
    {0x1FEE, 0x1FEF},
    {0x1FF9, 0x1FF9},
    {0x1FFB, 0x1FFB},
    {0x1FFD, 0x1FFD},
    {0x2000, 0x2001},
    {0x2126, 0x2126},
    {0x212A, 0x212B},
    {0x2329, 0x2329},
    {0x232A, 0x232A},
    {0x2ADC, 0x2ADC},
    {0xF900, 0xFA0D},
    {0xFA10, 0xFA10},
    {0xFA12, 0xFA12},
    {0xFA15, 0xFA1E},
    {0xFA20, 0xFA20},
    {0xFA22, 0xFA22},
    {0xFA25, 0xFA26},
    {0xFA2A, 0xFA6D},
    {0xFA70, 0xFAD9},
    {0xFB1D, 0xFB1D},
    {0xFB1F, 0xFB1F},
    {0xFB2A, 0xFB36},
    {0xFB38, 0xFB3C},
    {0xFB3E, 0xFB3E},
    {0xFB40, 0xFB41},
    {0xFB43, 0xFB44},
    {0xFB46, 0xFB4E},
    // clang-format on
}; // 20 ranges, 51 single codepoints
#    else
extern const struct range_bool16 NFC_N_list16[71];
#    endif

#    ifndef EXTERN_SCRIPTS
LOCAL const struct range_bool NFC_N_list32[] = {
    // clang-format off
    {0x1D15E, 0x1D164},
    {0x1D1BB, 0x1D1C0},
    {0x2F800, 0x2FA1D},
    // clang-format on
}; // 3 ranges, 0 single codepoints
#    else
extern const struct range_bool NFC_N_list32[3];
#    endif
#  endif

// NFC_Quick_Check=Maybe
#  if !defined U8ID_NORM || U8ID_NORM == NFC
#    ifndef EXTERN_SCRIPTS
LOCAL const struct range_bool16 NFC_M_list16[] = {
    // clang-format off
    {0x0300, 0x0304},
    {0x0306, 0x030C},
    {0x030F, 0x030F},
    {0x0311, 0x0311},
    {0x0313, 0x0314},
    {0x031B, 0x031B},
    {0x0323, 0x0328},
    {0x032D, 0x032E},
    {0x0330, 0x0331},
    {0x0338, 0x0338},
    {0x0342, 0x0342},
    {0x0345, 0x0345},
    {0x0653, 0x0655},
    {0x093C, 0x093C},
    {0x09BE, 0x09BE},
    {0x09D7, 0x09D7},
    {0x0B3E, 0x0B3E},
    {0x0B56, 0x0B56},
    {0x0B57, 0x0B57},
    {0x0BBE, 0x0BBE},
    {0x0BD7, 0x0BD7},
    {0x0C56, 0x0C56},
    {0x0CC2, 0x0CC2},
    {0x0CD5, 0x0CD6},
    {0x0D3E, 0x0D3E},
    {0x0D57, 0x0D57},
    {0x0DCA, 0x0DCA},
    {0x0DCF, 0x0DCF},
    {0x0DDF, 0x0DDF},
    {0x102E, 0x102E},
    {0x1161, 0x1175},
    {0x11A8, 0x11C2},
    {0x1B35, 0x1B35},
    {0x3099, 0x309A},
    // clang-format on
}; // 11 ranges, 23 single codepoints
#    else
extern const struct range_bool16 NFC_M_list16[34];
#    endif

#    ifndef EXTERN_SCRIPTS
LOCAL const struct range_bool NFC_M_list32[] = {
    // clang-format off
    {0x110BA, 0x110BA},
    {0x11127, 0x11127},
    {0x1133E, 0x1133E},
    {0x11357, 0x11357},
    {0x113B8, 0x113B8},
    {0x113BB, 0x113BB},
    {0x113C2, 0x113C2},
    {0x113C5, 0x113C5},
    {0x113C7, 0x113C9},
    {0x114B0, 0x114B0},
    {0x114BA, 0x114BA},
    {0x114BD, 0x114BD},
    {0x115AF, 0x115AF},
    {0x11930, 0x11930},
    {0x1611E, 0x16129},
    {0x16D67, 0x16D68},
    // clang-format on
}; // 3 ranges, 13 single codepoints
#    else
extern const struct range_bool NFC_M_list32[16];
#    endif
#  endif

// NFKD_Quick_Check=No
#  if !defined U8ID_NORM || U8ID_NORM == NFKD
#    ifndef EXTERN_SCRIPTS
LOCAL const struct range_bool16 NFKD_N_list16[] = {
    // clang-format off
    {0x00A0, 0x00A0},
    {0x00A8, 0x00A8},
    {0x00AA, 0x00AA},
    {0x00AF, 0x00AF},
    {0x00B2, 0x00B3},
    {0x00B4, 0x00B4},
    {0x00B5, 0x00B5},
    {0x00B8, 0x00B8},
    {0x00B9, 0x00B9},
    {0x00BA, 0x00BA},
    {0x00BC, 0x00BE},
    {0x00C0, 0x00C5},
    {0x00C7, 0x00CF},
    {0x00D1, 0x00D6},
    {0x00D9, 0x00DD},
    {0x00E0, 0x00E5},
    {0x00E7, 0x00EF},
    {0x00F1, 0x00F6},
    {0x00F9, 0x00FD},
    {0x00FF, 0x010F},
    {0x0112, 0x0125},
    {0x0128, 0x0130},
    {0x0132, 0x0137},
    {0x0139, 0x0140},
    {0x0143, 0x0149},
    {0x014C, 0x0151},
    {0x0154, 0x0165},
    {0x0168, 0x017F},
    {0x01A0, 0x01A1},
    {0x01AF, 0x01B0},
    {0x01C4, 0x01DC},
    {0x01DE, 0x01E3},
    {0x01E6, 0x01F5},
    {0x01F8, 0x021B},
    {0x021E, 0x021F},
    {0x0226, 0x0233},
    {0x02B0, 0x02B8},
    {0x02D8, 0x02DD},
    {0x02E0, 0x02E4},
    {0x0340, 0x0341},
    {0x0343, 0x0344},
    {0x0374, 0x0374},
    {0x037A, 0x037A},
    {0x037E, 0x037E},
    {0x0384, 0x0385},
    {0x0386, 0x0386},
    {0x0387, 0x0387},
    {0x0388, 0x038A},
    {0x038C, 0x038C},
    {0x038E, 0x0390},
    {0x03AA, 0x03B0},
    {0x03CA, 0x03CE},
    {0x03D0, 0x03D6},
    {0x03F0, 0x03F2},
    {0x03F4, 0x03F5},
    {0x03F9, 0x03F9},
    {0x0400, 0x0401},
    {0x0403, 0x0403},
    {0x0407, 0x0407},
    {0x040C, 0x040E},
    {0x0419, 0x0419},
    {0x0439, 0x0439},
    {0x0450, 0x0451},
    {0x0453, 0x0453},
    {0x0457, 0x0457},
    {0x045C, 0x045E},
    {0x0476, 0x0477},
    {0x04C1, 0x04C2},
    {0x04D0, 0x04D3},
    {0x04D6, 0x04D7},
    {0x04DA, 0x04DF},
    {0x04E2, 0x04E7},
    {0x04EA, 0x04F5},
    {0x04F8, 0x04F9},
    {0x0587, 0x0587},
    {0x0622, 0x0626},
    {0x0675, 0x0678},
    {0x06C0, 0x06C0},
    {0x06C2, 0x06C2},
    {0x06D3, 0x06D3},
    {0x0929, 0x0929},
    {0x0931, 0x0931},
    {0x0934, 0x0934},
    {0x0958, 0x095F},
    {0x09CB, 0x09CC},
    {0x09DC, 0x09DD},
    {0x09DF, 0x09DF},
    {0x0A33, 0x0A33},
    {0x0A36, 0x0A36},
    {0x0A59, 0x0A5B},
    {0x0A5E, 0x0A5E},
    {0x0B48, 0x0B48},
    {0x0B4B, 0x0B4C},
    {0x0B5C, 0x0B5D},
    {0x0B94, 0x0B94},
    {0x0BCA, 0x0BCC},
    {0x0C48, 0x0C48},
    {0x0CC0, 0x0CC0},
    {0x0CC7, 0x0CC8},
    {0x0CCA, 0x0CCB},
    {0x0D4A, 0x0D4C},
    {0x0DDA, 0x0DDA},
    {0x0DDC, 0x0DDE},
    {0x0E33, 0x0E33},
    {0x0EB3, 0x0EB3},
    {0x0EDC, 0x0EDD},
    {0x0F0C, 0x0F0C},
    {0x0F43, 0x0F43},
    {0x0F4D, 0x0F4D},
    {0x0F52, 0x0F52},
    {0x0F57, 0x0F57},
    {0x0F5C, 0x0F5C},
    {0x0F69, 0x0F69},
    {0x0F73, 0x0F73},
    {0x0F75, 0x0F79},
    {0x0F81, 0x0F81},
    {0x0F93, 0x0F93},
    {0x0F9D, 0x0F9D},
    {0x0FA2, 0x0FA2},
    {0x0FA7, 0x0FA7},
    {0x0FAC, 0x0FAC},
    {0x0FB9, 0x0FB9},
    {0x1026, 0x1026},
    {0x10FC, 0x10FC},
    {0x1B06, 0x1B06},
    {0x1B08, 0x1B08},
    {0x1B0A, 0x1B0A},
    {0x1B0C, 0x1B0C},
    {0x1B0E, 0x1B0E},
    {0x1B12, 0x1B12},
    {0x1B3B, 0x1B3B},
    {0x1B3D, 0x1B3D},
    {0x1B40, 0x1B41},
    {0x1B43, 0x1B43},
    {0x1D2C, 0x1D2E},
    {0x1D30, 0x1D3A},
    {0x1D3C, 0x1D4D},
    {0x1D4F, 0x1D6A},
    {0x1D78, 0x1D78},
    {0x1D9B, 0x1DBF},
    {0x1E00, 0x1E9B},
    {0x1EA0, 0x1EF9},
    {0x1F00, 0x1F15},
    {0x1F18, 0x1F1D},
    {0x1F20, 0x1F45},
    {0x1F48, 0x1F4D},
    {0x1F50, 0x1F57},
    {0x1F59, 0x1F59},
    {0x1F5B, 0x1F5B},
    {0x1F5D, 0x1F5D},
    {0x1F5F, 0x1F7D},
    {0x1F80, 0x1FB4},
    {0x1FB6, 0x1FBC},
    {0x1FBD, 0x1FBD},
    {0x1FBE, 0x1FBE},
    {0x1FBF, 0x1FC1},
    {0x1FC2, 0x1FC4},
    {0x1FC6, 0x1FCC},
    {0x1FCD, 0x1FCF},
    {0x1FD0, 0x1FD3},
    {0x1FD6, 0x1FDB},
    {0x1FDD, 0x1FDF},
    {0x1FE0, 0x1FEC},
    {0x1FED, 0x1FEF},
    {0x1FF2, 0x1FF4},
    {0x1FF6, 0x1FFC},
    {0x1FFD, 0x1FFE},
    {0x2000, 0x200A},
    {0x2011, 0x2011},
    {0x2017, 0x2017},
    {0x2024, 0x2026},
    {0x202F, 0x202F},
    {0x2033, 0x2034},
    {0x2036, 0x2037},
    {0x203C, 0x203C},
    {0x203E, 0x203E},
    {0x2047, 0x2049},
    {0x2057, 0x2057},
    {0x205F, 0x205F},
    {0x2070, 0x2070},
    {0x2071, 0x2071},
    {0x2074, 0x2079},
    {0x207A, 0x207C},
    {0x207D, 0x207D},
    {0x207E, 0x207E},
    {0x207F, 0x207F},
    {0x2080, 0x2089},
    {0x208A, 0x208C},
    {0x208D, 0x208D},
    {0x208E, 0x208E},
    {0x2090, 0x209C},
    {0x20A8, 0x20A8},
    {0x2100, 0x2101},
    {0x2102, 0x2102},
    {0x2103, 0x2103},
    {0x2105, 0x2106},
    {0x2107, 0x2107},
    {0x2109, 0x2109},
    {0x210A, 0x2113},
    {0x2115, 0x2115},
    {0x2116, 0x2116},
    {0x2119, 0x211D},
    {0x2120, 0x2122},
    {0x2124, 0x2124},
    {0x2126, 0x2126},
    {0x2128, 0x2128},
    {0x212A, 0x212D},
    {0x212F, 0x2131},
    {0x2133, 0x2134},
    {0x2135, 0x2138},
    {0x2139, 0x2139},
    {0x213B, 0x213B},
    {0x213C, 0x213F},
    {0x2140, 0x2140},
    {0x2145, 0x2149},
    {0x2150, 0x215F},
    {0x2160, 0x217F},
    {0x2189, 0x2189},
    {0x219A, 0x219B},
    {0x21AE, 0x21AE},
    {0x21CD, 0x21CD},
    {0x21CE, 0x21CF},
    {0x2204, 0x2204},
    {0x2209, 0x2209},
    {0x220C, 0x220C},
    {0x2224, 0x2224},
    {0x2226, 0x2226},
    {0x222C, 0x222D},
    {0x222F, 0x2230},
    {0x2241, 0x2241},
    {0x2244, 0x2244},
    {0x2247, 0x2247},
    {0x2249, 0x2249},
    {0x2260, 0x2260},
    {0x2262, 0x2262},
    {0x226D, 0x2271},
    {0x2274, 0x2275},
    {0x2278, 0x2279},
    {0x2280, 0x2281},
    {0x2284, 0x2285},
    {0x2288, 0x2289},
    {0x22AC, 0x22AF},
    {0x22E0, 0x22E3},
    {0x22EA, 0x22ED},
    {0x2329, 0x2329},
    {0x232A, 0x232A},
    {0x2460, 0x249B},
    {0x249C, 0x24E9},
    {0x24EA, 0x24EA},
    {0x2A0C, 0x2A0C},
    {0x2A74, 0x2A76},
    {0x2ADC, 0x2ADC},
    {0x2C7C, 0x2C7D},
    {0x2D6F, 0x2D6F},
    {0x2E9F, 0x2E9F},
    {0x2EF3, 0x2EF3},
    {0x2F00, 0x2FD5},
    {0x3000, 0x3000},
    {0x3036, 0x3036},
    {0x3038, 0x303A},
    {0x304C, 0x304C},
    {0x304E, 0x304E},
    {0x3050, 0x3050},
    {0x3052, 0x3052},
    {0x3054, 0x3054},
    {0x3056, 0x3056},
    {0x3058, 0x3058},
    {0x305A, 0x305A},
    {0x305C, 0x305C},
    {0x305E, 0x305E},
    {0x3060, 0x3060},
    {0x3062, 0x3062},
    {0x3065, 0x3065},
    {0x3067, 0x3067},
    {0x3069, 0x3069},
    {0x3070, 0x3071},
    {0x3073, 0x3074},
    {0x3076, 0x3077},
    {0x3079, 0x307A},
    {0x307C, 0x307D},
    {0x3094, 0x3094},
    {0x309B, 0x309C},
    {0x309E, 0x309E},
    {0x309F, 0x309F},
    {0x30AC, 0x30AC},
    {0x30AE, 0x30AE},
    {0x30B0, 0x30B0},
    {0x30B2, 0x30B2},
    {0x30B4, 0x30B4},
    {0x30B6, 0x30B6},
    {0x30B8, 0x30B8},
    {0x30BA, 0x30BA},
    {0x30BC, 0x30BC},
    {0x30BE, 0x30BE},
    {0x30C0, 0x30C0},
    {0x30C2, 0x30C2},
    {0x30C5, 0x30C5},
    {0x30C7, 0x30C7},
    {0x30C9, 0x30C9},
    {0x30D0, 0x30D1},
    {0x30D3, 0x30D4},
    {0x30D6, 0x30D7},
    {0x30D9, 0x30DA},
    {0x30DC, 0x30DD},
    {0x30F4, 0x30F4},
    {0x30F7, 0x30FA},
    {0x30FE, 0x30FE},
    {0x30FF, 0x30FF},
    {0x3131, 0x318E},
    {0x3192, 0x3195},
    {0x3196, 0x319F},
    {0x3200, 0x321E},
    {0x3220, 0x3229},
    {0x322A, 0x3247},
    {0x3250, 0x3250},
    {0x3251, 0x325F},
    {0x3260, 0x327E},
    {0x3280, 0x3289},
    {0x328A, 0x32B0},
    {0x32B1, 0x32BF},
    {0x32C0, 0x33FF},
    {0xA69C, 0xA69D},
    {0xA770, 0xA770},
    {0xA7F2, 0xA7F4},
    {0xA7F8, 0xA7F9},
    {0xAB5C, 0xAB5F},
    {0xAB69, 0xAB69},
    {0xAC00, 0xD7A3},
    {0xF900, 0xFA0D},
    {0xFA10, 0xFA10},
    {0xFA12, 0xFA12},
    {0xFA15, 0xFA1E},
    {0xFA20, 0xFA20},
    {0xFA22, 0xFA22},
    {0xFA25, 0xFA26},
    {0xFA2A, 0xFA6D},
    {0xFA70, 0xFAD9},
    {0xFB00, 0xFB06},
    {0xFB13, 0xFB17},
    {0xFB1D, 0xFB1D},
    {0xFB1F, 0xFB28},
    {0xFB29, 0xFB29},
    {0xFB2A, 0xFB36},
    {0xFB38, 0xFB3C},
    {0xFB3E, 0xFB3E},
    {0xFB40, 0xFB41},
    {0xFB43, 0xFB44},
    {0xFB46, 0xFBB1},
    {0xFBD3, 0xFD3D},
    {0xFD50, 0xFD8F},
    {0xFD92, 0xFDC7},
    {0xFDF0, 0xFDFB},
    {0xFDFC, 0xFDFC},
    {0xFE10, 0xFE16},
    {0xFE17, 0xFE17},
    {0xFE18, 0xFE18},
    {0xFE19, 0xFE19},
    {0xFE30, 0xFE30},
    {0xFE31, 0xFE32},
    {0xFE33, 0xFE34},
    {0xFE35, 0xFE35},
    {0xFE36, 0xFE36},
    {0xFE37, 0xFE37},
    {0xFE38, 0xFE38},
    {0xFE39, 0xFE39},
    {0xFE3A, 0xFE3A},
    {0xFE3B, 0xFE3B},
    {0xFE3C, 0xFE3C},
    {0xFE3D, 0xFE3D},
    {0xFE3E, 0xFE3E},
    {0xFE3F, 0xFE3F},
    {0xFE40, 0xFE40},
    {0xFE41, 0xFE41},
    {0xFE42, 0xFE42},
    {0xFE43, 0xFE43},
    {0xFE44, 0xFE44},
    {0xFE47, 0xFE47},
    {0xFE48, 0xFE48},
    {0xFE49, 0xFE4C},
    {0xFE4D, 0xFE4F},
    {0xFE50, 0xFE52},
    {0xFE54, 0xFE57},
    {0xFE58, 0xFE58},
    {0xFE59, 0xFE59},
    {0xFE5A, 0xFE5A},
    {0xFE5B, 0xFE5B},
    {0xFE5C, 0xFE5C},
    {0xFE5D, 0xFE5D},
    {0xFE5E, 0xFE5E},
    {0xFE5F, 0xFE61},
    {0xFE62, 0xFE62},
    {0xFE63, 0xFE63},
    {0xFE64, 0xFE66},
    {0xFE68, 0xFE68},
    {0xFE69, 0xFE69},
    {0xFE6A, 0xFE6B},
    {0xFE70, 0xFE72},
    {0xFE74, 0xFE74},
    {0xFE76, 0xFEFC},
    {0xFF01, 0xFF03},
    {0xFF04, 0xFF04},
    {0xFF05, 0xFF07},
    {0xFF08, 0xFF08},
    {0xFF09, 0xFF09},
    {0xFF0A, 0xFF0A},
    {0xFF0B, 0xFF0B},
    {0xFF0C, 0xFF0C},
    {0xFF0D, 0xFF0D},
    {0xFF0E, 0xFF0F},
    {0xFF10, 0xFF19},
    {0xFF1A, 0xFF1B},
    {0xFF1C, 0xFF1E},
    {0xFF1F, 0xFF20},
    {0xFF21, 0xFF3A},
    {0xFF3B, 0xFF3B},
    {0xFF3C, 0xFF3C},
    {0xFF3D, 0xFF3D},
    {0xFF3E, 0xFF3E},
    {0xFF3F, 0xFF3F},
    {0xFF40, 0xFF40},
    {0xFF41, 0xFF5A},
    {0xFF5B, 0xFF5B},
    {0xFF5C, 0xFF5C},
    {0xFF5D, 0xFF5D},
    {0xFF5E, 0xFF5E},
    {0xFF5F, 0xFF5F},
    {0xFF60, 0xFF60},
    {0xFF61, 0xFF61},
    {0xFF62, 0xFF62},
    {0xFF63, 0xFF63},
    {0xFF64, 0xFF65},
    {0xFF66, 0xFF6F},
    {0xFF70, 0xFF70},
    {0xFF71, 0xFF9D},
    {0xFF9E, 0xFF9F},
    {0xFFA0, 0xFFBE},
    {0xFFC2, 0xFFC7},
    {0xFFCA, 0xFFCF},
    {0xFFD2, 0xFFD7},
    {0xFFDA, 0xFFDC},
    {0xFFE0, 0xFFE1},
    {0xFFE2, 0xFFE2},
    {0xFFE3, 0xFFE3},
    {0xFFE4, 0xFFE4},
    {0xFFE5, 0xFFE6},
    {0xFFE8, 0xFFE8},
    {0xFFE9, 0xFFEC},
    {0xFFED, 0xFFEE},
    // clang-format on
}; // 217 ranges, 231 single codepoints
#    else
extern const struct range_bool16 NFKD_N_list16[448];
#    endif

#    ifndef EXTERN_SCRIPTS
LOCAL const struct range_bool NFKD_N_list32[] = {
    // clang-format off
    {0x105C9, 0x105C9},
    {0x105E4, 0x105E4},
    {0x10781, 0x10785},
    {0x10787, 0x107B0},
    {0x107B2, 0x107BA},
    {0x1109A, 0x1109A},
    {0x1109C, 0x1109C},
    {0x110AB, 0x110AB},
    {0x1112E, 0x1112F},
    {0x1134B, 0x1134C},
    {0x11383, 0x11383},
    {0x11385, 0x11385},
    {0x1138E, 0x1138E},
    {0x11391, 0x11391},
    {0x113C5, 0x113C5},
    {0x113C7, 0x113C8},
    {0x114BB, 0x114BC},
    {0x114BE, 0x114BE},
    {0x115BA, 0x115BB},
    {0x11938, 0x11938},
    {0x16121, 0x16128},
    {0x16D68, 0x16D6A},
    {0x1CCD6, 0x1CCEF},
    {0x1CCF0, 0x1CCF9},
    {0x1D15E, 0x1D164},
    {0x1D1BB, 0x1D1C0},
    {0x1D400, 0x1D454},
    {0x1D456, 0x1D49C},
    {0x1D49E, 0x1D49F},
    {0x1D4A2, 0x1D4A2},
    {0x1D4A5, 0x1D4A6},
    {0x1D4A9, 0x1D4AC},
    {0x1D4AE, 0x1D4B9},
    {0x1D4BB, 0x1D4BB},
    {0x1D4BD, 0x1D4C3},
    {0x1D4C5, 0x1D505},
    {0x1D507, 0x1D50A},
    {0x1D50D, 0x1D514},
    {0x1D516, 0x1D51C},
    {0x1D51E, 0x1D539},
    {0x1D53B, 0x1D53E},
    {0x1D540, 0x1D544},
    {0x1D546, 0x1D546},
    {0x1D54A, 0x1D550},
    {0x1D552, 0x1D6A5},
    {0x1D6A8, 0x1D6C0},
    {0x1D6C1, 0x1D6C1},
    {0x1D6C2, 0x1D6DA},
    {0x1D6DB, 0x1D6DB},
    {0x1D6DC, 0x1D6FA},
    {0x1D6FB, 0x1D6FB},
    {0x1D6FC, 0x1D714},
    {0x1D715, 0x1D715},
    {0x1D716, 0x1D734},
    {0x1D735, 0x1D735},
    {0x1D736, 0x1D74E},
    {0x1D74F, 0x1D74F},
    {0x1D750, 0x1D76E},
    {0x1D76F, 0x1D76F},
    {0x1D770, 0x1D788},
    {0x1D789, 0x1D789},
    {0x1D78A, 0x1D7A8},
    {0x1D7A9, 0x1D7A9},
    {0x1D7AA, 0x1D7C2},
    {0x1D7C3, 0x1D7C3},
    {0x1D7C4, 0x1D7CB},
    {0x1D7CE, 0x1D7FF},
    {0x1E030, 0x1E06D},
    {0x1EE00, 0x1EE03},
    {0x1EE05, 0x1EE1F},
    {0x1EE21, 0x1EE22},
    {0x1EE24, 0x1EE24},
    {0x1EE27, 0x1EE27},
    {0x1EE29, 0x1EE32},
    {0x1EE34, 0x1EE37},
    {0x1EE39, 0x1EE39},
    {0x1EE3B, 0x1EE3B},
    {0x1EE42, 0x1EE42},
    {0x1EE47, 0x1EE47},
    {0x1EE49, 0x1EE49},
    {0x1EE4B, 0x1EE4B},
    {0x1EE4D, 0x1EE4F},
    {0x1EE51, 0x1EE52},
    {0x1EE54, 0x1EE54},
    {0x1EE57, 0x1EE57},
    {0x1EE59, 0x1EE59},
    {0x1EE5B, 0x1EE5B},
    {0x1EE5D, 0x1EE5D},
    {0x1EE5F, 0x1EE5F},
    {0x1EE61, 0x1EE62},
    {0x1EE64, 0x1EE64},
    {0x1EE67, 0x1EE6A},
    {0x1EE6C, 0x1EE72},
    {0x1EE74, 0x1EE77},
    {0x1EE79, 0x1EE7C},
    {0x1EE7E, 0x1EE7E},
    {0x1EE80, 0x1EE89},
    {0x1EE8B, 0x1EE9B},
    {0x1EEA1, 0x1EEA3},
    {0x1EEA5, 0x1EEA9},
    {0x1EEAB, 0x1EEBB},
    {0x1F100, 0x1F10A},
    {0x1F110, 0x1F12E},
    {0x1F130, 0x1F14F},
    {0x1F16A, 0x1F16C},
    {0x1F190, 0x1F190},
    {0x1F200, 0x1F202},
    {0x1F210, 0x1F23B},
    {0x1F240, 0x1F248},
    {0x1F250, 0x1F251},
    {0x1FBF0, 0x1FBF9},
    {0x2F800, 0x2FA1D},
    // clang-format on
}; // 70 ranges, 42 single codepoints
#    else
extern const struct range_bool NFKD_N_list32[112];
#    endif
#  endif

// NFKC_Quick_Check=No
#  if !defined U8ID_NORM || U8ID_NORM == NFKC
#    ifndef EXTERN_SCRIPTS
LOCAL const struct range_bool16 NFKC_N_list16[] = {
    // clang-format off
    {0x00A0, 0x00A0},
    {0x00A8, 0x00A8},
    {0x00AA, 0x00AA},
    {0x00AF, 0x00AF},
    {0x00B2, 0x00B3},
    {0x00B4, 0x00B4},
    {0x00B5, 0x00B5},
    {0x00B8, 0x00B8},
    {0x00B9, 0x00B9},
    {0x00BA, 0x00BA},
    {0x00BC, 0x00BE},
    {0x0132, 0x0133},
    {0x013F, 0x0140},
    {0x0149, 0x0149},
    {0x017F, 0x017F},
    {0x01C4, 0x01CC},
    {0x01F1, 0x01F3},
    {0x02B0, 0x02B8},
    {0x02D8, 0x02DD},
    {0x02E0, 0x02E4},
    {0x0340, 0x0341},
    {0x0343, 0x0344},
    {0x0374, 0x0374},
    {0x037A, 0x037A},
    {0x037E, 0x037E},
    {0x0384, 0x0385},
    {0x0387, 0x0387},
    {0x03D0, 0x03D6},
    {0x03F0, 0x03F2},
    {0x03F4, 0x03F5},
    {0x03F9, 0x03F9},
    {0x0587, 0x0587},
    {0x0675, 0x0678},
    {0x0958, 0x095F},
    {0x09DC, 0x09DD},
    {0x09DF, 0x09DF},
    {0x0A33, 0x0A33},
    {0x0A36, 0x0A36},
    {0x0A59, 0x0A5B},
    {0x0A5E, 0x0A5E},
    {0x0B5C, 0x0B5D},
    {0x0E33, 0x0E33},
    {0x0EB3, 0x0EB3},
    {0x0EDC, 0x0EDD},
    {0x0F0C, 0x0F0C},
    {0x0F43, 0x0F43},
    {0x0F4D, 0x0F4D},
    {0x0F52, 0x0F52},
    {0x0F57, 0x0F57},
    {0x0F5C, 0x0F5C},
    {0x0F69, 0x0F69},
    {0x0F73, 0x0F73},
    {0x0F75, 0x0F79},
    {0x0F81, 0x0F81},
    {0x0F93, 0x0F93},
    {0x0F9D, 0x0F9D},
    {0x0FA2, 0x0FA2},
    {0x0FA7, 0x0FA7},
    {0x0FAC, 0x0FAC},
    {0x0FB9, 0x0FB9},
    {0x10FC, 0x10FC},
    {0x1D2C, 0x1D2E},
    {0x1D30, 0x1D3A},
    {0x1D3C, 0x1D4D},
    {0x1D4F, 0x1D6A},
    {0x1D78, 0x1D78},
    {0x1D9B, 0x1DBF},
    {0x1E9A, 0x1E9B},
    {0x1F71, 0x1F71},
    {0x1F73, 0x1F73},
    {0x1F75, 0x1F75},
    {0x1F77, 0x1F77},
    {0x1F79, 0x1F79},
    {0x1F7B, 0x1F7B},
    {0x1F7D, 0x1F7D},
    {0x1FBB, 0x1FBB},
    {0x1FBD, 0x1FBD},
    {0x1FBE, 0x1FBE},
    {0x1FBF, 0x1FC1},
    {0x1FC9, 0x1FC9},
    {0x1FCB, 0x1FCB},
    {0x1FCD, 0x1FCF},
    {0x1FD3, 0x1FD3},
    {0x1FDB, 0x1FDB},
    {0x1FDD, 0x1FDF},
    {0x1FE3, 0x1FE3},
    {0x1FEB, 0x1FEB},
    {0x1FED, 0x1FEF},
    {0x1FF9, 0x1FF9},
    {0x1FFB, 0x1FFB},
    {0x1FFD, 0x1FFE},
    {0x2000, 0x200A},
    {0x2011, 0x2011},
    {0x2017, 0x2017},
    {0x2024, 0x2026},
    {0x202F, 0x202F},
    {0x2033, 0x2034},
    {0x2036, 0x2037},
    {0x203C, 0x203C},
    {0x203E, 0x203E},
    {0x2047, 0x2049},
    {0x2057, 0x2057},
    {0x205F, 0x205F},
    {0x2070, 0x2070},
    {0x2071, 0x2071},
    {0x2074, 0x2079},
    {0x207A, 0x207C},
    {0x207D, 0x207D},
    {0x207E, 0x207E},
    {0x207F, 0x207F},
    {0x2080, 0x2089},
    {0x208A, 0x208C},
    {0x208D, 0x208D},
    {0x208E, 0x208E},
    {0x2090, 0x209C},
    {0x20A8, 0x20A8},
    {0x2100, 0x2101},
    {0x2102, 0x2102},
    {0x2103, 0x2103},
    {0x2105, 0x2106},
    {0x2107, 0x2107},
    {0x2109, 0x2109},
    {0x210A, 0x2113},
    {0x2115, 0x2115},
    {0x2116, 0x2116},
    {0x2119, 0x211D},
    {0x2120, 0x2122},
    {0x2124, 0x2124},
    {0x2126, 0x2126},
    {0x2128, 0x2128},
    {0x212A, 0x212D},
    {0x212F, 0x2131},
    {0x2133, 0x2134},
    {0x2135, 0x2138},
    {0x2139, 0x2139},
    {0x213B, 0x213B},
    {0x213C, 0x213F},
    {0x2140, 0x2140},
    {0x2145, 0x2149},
    {0x2150, 0x215F},
    {0x2160, 0x217F},
    {0x2189, 0x2189},
    {0x222C, 0x222D},
    {0x222F, 0x2230},
    {0x2329, 0x2329},
    {0x232A, 0x232A},
    {0x2460, 0x249B},
    {0x249C, 0x24E9},
    {0x24EA, 0x24EA},
    {0x2A0C, 0x2A0C},
    {0x2A74, 0x2A76},
    {0x2ADC, 0x2ADC},
    {0x2C7C, 0x2C7D},
    {0x2D6F, 0x2D6F},
    {0x2E9F, 0x2E9F},
    {0x2EF3, 0x2EF3},
    {0x2F00, 0x2FD5},
    {0x3000, 0x3000},
    {0x3036, 0x3036},
    {0x3038, 0x303A},
    {0x309B, 0x309C},
    {0x309F, 0x309F},
    {0x30FF, 0x30FF},
    {0x3131, 0x318E},
    {0x3192, 0x3195},
    {0x3196, 0x319F},
    {0x3200, 0x321E},
    {0x3220, 0x3229},
    {0x322A, 0x3247},
    {0x3250, 0x3250},
    {0x3251, 0x325F},
    {0x3260, 0x327E},
    {0x3280, 0x3289},
    {0x328A, 0x32B0},
    {0x32B1, 0x32BF},
    {0x32C0, 0x33FF},
    {0xA69C, 0xA69D},
    {0xA770, 0xA770},
    {0xA7F2, 0xA7F4},
    {0xA7F8, 0xA7F9},
    {0xAB5C, 0xAB5F},
    {0xAB69, 0xAB69},
    {0xF900, 0xFA0D},
    {0xFA10, 0xFA10},
    {0xFA12, 0xFA12},
    {0xFA15, 0xFA1E},
    {0xFA20, 0xFA20},
    {0xFA22, 0xFA22},
    {0xFA25, 0xFA26},
    {0xFA2A, 0xFA6D},
    {0xFA70, 0xFAD9},
    {0xFB00, 0xFB06},
    {0xFB13, 0xFB17},
    {0xFB1D, 0xFB1D},
    {0xFB1F, 0xFB28},
    {0xFB29, 0xFB29},
    {0xFB2A, 0xFB36},
    {0xFB38, 0xFB3C},
    {0xFB3E, 0xFB3E},
    {0xFB40, 0xFB41},
    {0xFB43, 0xFB44},
    {0xFB46, 0xFBB1},
    {0xFBD3, 0xFD3D},
    {0xFD50, 0xFD8F},
    {0xFD92, 0xFDC7},
    {0xFDF0, 0xFDFB},
    {0xFDFC, 0xFDFC},
    {0xFE10, 0xFE16},
    {0xFE17, 0xFE17},
    {0xFE18, 0xFE18},
    {0xFE19, 0xFE19},
    {0xFE30, 0xFE30},
    {0xFE31, 0xFE32},
    {0xFE33, 0xFE34},
    {0xFE35, 0xFE35},
    {0xFE36, 0xFE36},
    {0xFE37, 0xFE37},
    {0xFE38, 0xFE38},
    {0xFE39, 0xFE39},
    {0xFE3A, 0xFE3A},
    {0xFE3B, 0xFE3B},
    {0xFE3C, 0xFE3C},
    {0xFE3D, 0xFE3D},
    {0xFE3E, 0xFE3E},
    {0xFE3F, 0xFE3F},
    {0xFE40, 0xFE40},
    {0xFE41, 0xFE41},
    {0xFE42, 0xFE42},
    {0xFE43, 0xFE43},
    {0xFE44, 0xFE44},
    {0xFE47, 0xFE47},
    {0xFE48, 0xFE48},
    {0xFE49, 0xFE4C},
    {0xFE4D, 0xFE4F},
    {0xFE50, 0xFE52},
    {0xFE54, 0xFE57},
    {0xFE58, 0xFE58},
    {0xFE59, 0xFE59},
    {0xFE5A, 0xFE5A},
    {0xFE5B, 0xFE5B},
    {0xFE5C, 0xFE5C},
    {0xFE5D, 0xFE5D},
    {0xFE5E, 0xFE5E},
    {0xFE5F, 0xFE61},
    {0xFE62, 0xFE62},
    {0xFE63, 0xFE63},
    {0xFE64, 0xFE66},
    {0xFE68, 0xFE68},
    {0xFE69, 0xFE69},
    {0xFE6A, 0xFE6B},
    {0xFE70, 0xFE72},
    {0xFE74, 0xFE74},
    {0xFE76, 0xFEFC},
    {0xFF01, 0xFF03},
    {0xFF04, 0xFF04},
    {0xFF05, 0xFF07},
    {0xFF08, 0xFF08},
    {0xFF09, 0xFF09},
    {0xFF0A, 0xFF0A},
    {0xFF0B, 0xFF0B},
    {0xFF0C, 0xFF0C},
    {0xFF0D, 0xFF0D},
    {0xFF0E, 0xFF0F},
    {0xFF10, 0xFF19},
    {0xFF1A, 0xFF1B},
    {0xFF1C, 0xFF1E},
    {0xFF1F, 0xFF20},
    {0xFF21, 0xFF3A},
    {0xFF3B, 0xFF3B},
    {0xFF3C, 0xFF3C},
    {0xFF3D, 0xFF3D},
    {0xFF3E, 0xFF3E},
    {0xFF3F, 0xFF3F},
    {0xFF40, 0xFF40},
    {0xFF41, 0xFF5A},
    {0xFF5B, 0xFF5B},
    {0xFF5C, 0xFF5C},
    {0xFF5D, 0xFF5D},
    {0xFF5E, 0xFF5E},
    {0xFF5F, 0xFF5F},
    {0xFF60, 0xFF60},
    {0xFF61, 0xFF61},
    {0xFF62, 0xFF62},
    {0xFF63, 0xFF63},
    {0xFF64, 0xFF65},
    {0xFF66, 0xFF6F},
    {0xFF70, 0xFF70},
    {0xFF71, 0xFF9D},
    {0xFF9E, 0xFF9F},
    {0xFFA0, 0xFFBE},
    {0xFFC2, 0xFFC7},
    {0xFFCA, 0xFFCF},
    {0xFFD2, 0xFFD7},
    {0xFFDA, 0xFFDC},
    {0xFFE0, 0xFFE1},
    {0xFFE2, 0xFFE2},
    {0xFFE3, 0xFFE3},
    {0xFFE4, 0xFFE4},
    {0xFFE5, 0xFFE6},
    {0xFFE8, 0xFFE8},
    {0xFFE9, 0xFFEC},
    {0xFFED, 0xFFEE},
    // clang-format on
}; // 132 ranges, 170 single codepoints
#    else
extern const struct range_bool16 NFKC_N_list16[302];
#    endif

#    ifndef EXTERN_SCRIPTS
LOCAL const struct range_bool NFKC_N_list32[] = {
    // clang-format off
    {0x10781, 0x10785},
    {0x10787, 0x107B0},
    {0x107B2, 0x107BA},
    {0x1CCD6, 0x1CCEF},
    {0x1CCF0, 0x1CCF9},
    {0x1D15E, 0x1D164},
    {0x1D1BB, 0x1D1C0},
    {0x1D400, 0x1D454},
    {0x1D456, 0x1D49C},
    {0x1D49E, 0x1D49F},
    {0x1D4A2, 0x1D4A2},
    {0x1D4A5, 0x1D4A6},
    {0x1D4A9, 0x1D4AC},
    {0x1D4AE, 0x1D4B9},
    {0x1D4BB, 0x1D4BB},
    {0x1D4BD, 0x1D4C3},
    {0x1D4C5, 0x1D505},
    {0x1D507, 0x1D50A},
    {0x1D50D, 0x1D514},
    {0x1D516, 0x1D51C},
    {0x1D51E, 0x1D539},
    {0x1D53B, 0x1D53E},
    {0x1D540, 0x1D544},
    {0x1D546, 0x1D546},
    {0x1D54A, 0x1D550},
    {0x1D552, 0x1D6A5},
    {0x1D6A8, 0x1D6C0},
    {0x1D6C1, 0x1D6C1},
    {0x1D6C2, 0x1D6DA},
    {0x1D6DB, 0x1D6DB},
    {0x1D6DC, 0x1D6FA},
    {0x1D6FB, 0x1D6FB},
    {0x1D6FC, 0x1D714},
    {0x1D715, 0x1D715},
    {0x1D716, 0x1D734},
    {0x1D735, 0x1D735},
    {0x1D736, 0x1D74E},
    {0x1D74F, 0x1D74F},
    {0x1D750, 0x1D76E},
    {0x1D76F, 0x1D76F},
    {0x1D770, 0x1D788},
    {0x1D789, 0x1D789},
    {0x1D78A, 0x1D7A8},
    {0x1D7A9, 0x1D7A9},
    {0x1D7AA, 0x1D7C2},
    {0x1D7C3, 0x1D7C3},
    {0x1D7C4, 0x1D7CB},
    {0x1D7CE, 0x1D7FF},
    {0x1E030, 0x1E06D},
    {0x1EE00, 0x1EE03},
    {0x1EE05, 0x1EE1F},
    {0x1EE21, 0x1EE22},
    {0x1EE24, 0x1EE24},
    {0x1EE27, 0x1EE27},
    {0x1EE29, 0x1EE32},
    {0x1EE34, 0x1EE37},
    {0x1EE39, 0x1EE39},
    {0x1EE3B, 0x1EE3B},
    {0x1EE42, 0x1EE42},
    {0x1EE47, 0x1EE47},
    {0x1EE49, 0x1EE49},
    {0x1EE4B, 0x1EE4B},
    {0x1EE4D, 0x1EE4F},
    {0x1EE51, 0x1EE52},
    {0x1EE54, 0x1EE54},
    {0x1EE57, 0x1EE57},
    {0x1EE59, 0x1EE59},
    {0x1EE5B, 0x1EE5B},
    {0x1EE5D, 0x1EE5D},
    {0x1EE5F, 0x1EE5F},
    {0x1EE61, 0x1EE62},
    {0x1EE64, 0x1EE64},
    {0x1EE67, 0x1EE6A},
    {0x1EE6C, 0x1EE72},
    {0x1EE74, 0x1EE77},
    {0x1EE79, 0x1EE7C},
    {0x1EE7E, 0x1EE7E},
    {0x1EE80, 0x1EE89},
    {0x1EE8B, 0x1EE9B},
    {0x1EEA1, 0x1EEA3},
    {0x1EEA5, 0x1EEA9},
    {0x1EEAB, 0x1EEBB},
    {0x1F100, 0x1F10A},
    {0x1F110, 0x1F12E},
    {0x1F130, 0x1F14F},
    {0x1F16A, 0x1F16C},
    {0x1F190, 0x1F190},
    {0x1F200, 0x1F202},
    {0x1F210, 0x1F23B},
    {0x1F240, 0x1F248},
    {0x1F250, 0x1F251},
    {0x1FBF0, 0x1FBF9},
    {0x2F800, 0x2FA1D},
    // clang-format on
}; // 63 ranges, 30 single codepoints
#    else
extern const struct range_bool NFKC_N_list32[93];
#    endif
#  endif

// NFKC_Quick_Check=Maybe
#  if !defined U8ID_NORM || U8ID_NORM == NFKC
#    ifndef EXTERN_SCRIPTS
LOCAL const struct range_bool16 NFKC_M_list16[] = {
    // clang-format off
    {0x0300, 0x0304},
    {0x0306, 0x030C},
    {0x030F, 0x030F},
    {0x0311, 0x0311},
    {0x0313, 0x0314},
    {0x031B, 0x031B},
    {0x0323, 0x0328},
    {0x032D, 0x032E},
    {0x0330, 0x0331},
    {0x0338, 0x0338},
    {0x0342, 0x0342},
    {0x0345, 0x0345},
    {0x0653, 0x0655},
    {0x093C, 0x093C},
    {0x09BE, 0x09BE},
    {0x09D7, 0x09D7},
    {0x0B3E, 0x0B3E},
    {0x0B56, 0x0B56},
    {0x0B57, 0x0B57},
    {0x0BBE, 0x0BBE},
    {0x0BD7, 0x0BD7},
    {0x0C56, 0x0C56},
    {0x0CC2, 0x0CC2},
    {0x0CD5, 0x0CD6},
    {0x0D3E, 0x0D3E},
    {0x0D57, 0x0D57},
    {0x0DCA, 0x0DCA},
    {0x0DCF, 0x0DCF},
    {0x0DDF, 0x0DDF},
    {0x102E, 0x102E},
    {0x1161, 0x1175},
    {0x11A8, 0x11C2},
    {0x1B35, 0x1B35},
    {0x3099, 0x309A},
    // clang-format on
}; // 11 ranges, 23 single codepoints
#    else
extern const struct range_bool16 NFKC_M_list16[34];
#    endif

#    ifndef EXTERN_SCRIPTS
LOCAL const struct range_bool NFKC_M_list32[] = {
    // clang-format off
    {0x110BA, 0x110BA},
    {0x11127, 0x11127},
    {0x1133E, 0x1133E},
    {0x11357, 0x11357},
    {0x113B8, 0x113B8},
    {0x113BB, 0x113BB},
    {0x113C2, 0x113C2},
    {0x113C5, 0x113C5},
    {0x113C7, 0x113C9},
    {0x114B0, 0x114B0},
    {0x114BA, 0x114BA},
    {0x114BD, 0x114BD},
    {0x115AF, 0x115AF},
    {0x11930, 0x11930},
    {0x1611E, 0x16129},
    {0x16D67, 0x16D68},
    // clang-format on
}; // 3 ranges, 13 single codepoints
#    else
extern const struct range_bool NFKC_M_list32[16];
#    endif
#  endif
#endif // USE_NORM_CROAR
