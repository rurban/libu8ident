#!/usr/bin/env perl
# libu8ident - Check unicode security guidelines for identifiers.
# Copyright 2014, 2021 Reini Urban
# SPDX-License-Identifier: Apache-2.0
#
# Create mark.h Combining_Mark (Mc | Me | Mn)

use strict;
use Config;
my $wb = "auxiliary/WordBreakProperty.txt"; #see Extend
my $ucd = "UnicodeData.txt";
if (!-e $ucd) {
  system("wget -N https://www.unicode.org/Public/UNIDATA/$ucd");
}

my @MARK;
open my $UCD, "<", $ucd or die "$ucd $!";
my ($from, $to, $oldto);
while (<$UCD>) {
  my @l = split ';';
  my $mark = @l[2];
  if ($mark =~ /^M[cen]$/) {
    $to = hex($l[0]);
    if (!$from) {
      push @MARK, [$to, $to];
      $from = $to;
    } else {
      $oldto = $MARK[$#MARK]->[1];
      if ($oldto + 1 != $to) {
        push @MARK, [$to, $to];
        $from = $to;
      } else { # update last
        $MARK[$#MARK]->[1] = $to;
      }
    }
  }
}
close $UCD;

open my $H, ">", "mark.h" or die "writing mark.h $!";
print $H <<'EOF';
/* ex: set ro ft=c: -*- mode: c; buffer-read-only: t -*- */
/* libu8ident - Check unicode security guidelines for identifiers.
   Copyright 2014, 2021 Reini Urban
   SPDX-License-Identifier: Apache-2.0

   generated by mkmark.pl, do not modify.
*/

EOF

printf $H <<'EOF', scalar @MARK;
/* All Combining Marks, sorted */
#ifdef EXT_SCRIPTS
extern const struct range_bool mark_list[%u];
#else
const struct range_bool mark_list[] = {
    // clang-format off
EOF
for my $r (@MARK) {
  printf $H "    { 0x%X, 0x%X },\n", $r->[0], $r->[1];
}
printf $H <<'EOF';
    // clang-format on
};
#endif
EOF

# assume symlinked
if (-e "roaring.h" && -e "roaring.c") {
    print "Create serialized roaring bitmaps:\n";
    if ($^O =~ /Win32/) {
	system($Config{cc}." mkroar.c -I. -o mkroar.exe");
	system("mkroar.exe mark");
	# ignore vms for now
    } else {
	system($Config{cc}." mkroar.c -I. -o mkroar");
	system("./mkroar mark");
    }
    print "\n";
    my $c = "mark_croar";
    print $H "\n#ifdef HAVE_CROARING\n";
    print $H "/* generated via mkroar.c */\n";
    close $H;
    system("xxd -i $c.bin >> mark.h");
    unlink "$c.bin";
    open $H, ">>", "mark.h" or die "appending mark.h $!";
    print $H "#endif // HAVE_CROARING\n";
}

close $H;
print "Created mark.h\n";

