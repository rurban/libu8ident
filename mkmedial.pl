#!/usr/bin/env perl
# libu8ident - Check unicode security guidelines for identifiers.
# Copyright 2022 Reini Urban
# SPDX-License-Identifier: Apache-2.0
#
# Create medial.h, letters in MEDIAL position

use strict;
use Config;
use utf8;

my $ucd = "UnicodeData.txt";
if (!-e $ucd) {
  system("wget -N https://www.unicode.org/Public/UNIDATA/$ucd");
}

my $medial_h = "medial.h";
my @M;
open my $UCD, "<", $ucd or die "$ucd $!";
my ($from, $oldto, $to) = (0,0,0);
while (<$UCD>) {
  my @l = split ';';
  my $m = $l[0];
  my $name = $l[1];
  if ($name =~ / MEDIAL /) {
    my $to = hex($m);
    unless ($from) {
      $from = $oldto = $to;
    } elsif ($oldto + 1 != $to) {
      push @M, [$from, $oldto];
      $from = $oldto = $to;
    } else {
      $oldto = $to;
    }
  }
}
$to = $oldto unless $to;
push @M, [$from, $to]; # the remainder
close $UCD;

if (!-w $medial_h) {
  chmod 0644, $medial_h;
}
open my $H, ">:utf8", $medial_h or die "writing $medial_h $!";
print $H <<'EOF';
/* ex: set ro ft=c: -*- mode: c; buffer-read-only: t -*- */
/* libu8ident - Check unicode security guidelines for identifiers.
   Copyright 2022 Reini Urban
   SPDX-License-Identifier: Apache-2.0

   UCD Medial Letters and Forms, not at Start and not at End of a word.
   Generated by mkmedial.pl, do not modify.
*/

EOF

printf $H <<'EOF', scalar @M;
#ifdef EXTERN_SCRIPTS
extern const struct range_bool medial_list[%u];
#else
const struct range_bool medial_list[] = {
    // clang-format off
EOF
my ($b, $s, $sum) = (0,0,0);
for my $r (@M) {
  my $u = chr $r->[0];
  $u = '' if $r->[0] >= 0xDB70 && $r->[0] <= 0xDFFF;
  $u = '' if $u !~ /\w/;
  $u = '' if $r->[2] =~ /^M/;
  if ($r->[0] == $r->[1]) {
    $s++; $sum++;
    printf $H "    {0x%X, 0x%X},\t// %s\n", $r->[0], $r->[1], $u;
  } else {
    my $u1 = chr $r->[1];
    $u1 = '' if $r->[1] >= 0xD800 && $r->[1] <= 0xDFFF;
    $u1 = '' if $u !~ /\w/;
    $u1 = '' if $r->[2] =~ /^M/;
    $b++; $sum += ($r->[1] + 1 - $r->[0]);
    printf $H "    {0x%X, 0x%X},\t// %s..%s\n", $r->[0], $r->[1], $u, $u1;
  }
}
printf $H <<'EOF', $b, $s, $sum;
    // clang-format on
}; // %u ranges, %u singles, %u codepoints
#endif
EOF

close $H;
chmod 0444, $medial_h;
print "Created $medial_h\n";

